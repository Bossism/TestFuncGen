[{"class_name": "SeparateParenGroups", "superclass": "", "interfaces": "", "c_sig": "class SeparateParenGroups", "has_constructor": false, "fields": [], "methods": [{"method_name": "separateParenGroups", "m_sig": "public static List<String> separateParenGroups(String parenString)", "class": "SeparateParenGroups", "source_code": "public static List<String> separateParenGroups(String parenString) {\n        List<String> result = new ArrayList<String>();\n        int count = 0;\n        StringBuilder curString = new StringBuilder();\n        for (int i = 0; i < parenString.length(); i++) {\n            if (parenString.charAt(i) == '(') {\n                count++;\n                curString.append('(');\n            } else if (parenString.charAt(i) == ')') {\n                count--;\n                curString.append(')');\n                if (count == 0) {\n                    result.add(curString.toString());\n                    curString = new StringBuilder();\n\n                }\n            }\n        }\n        return result;\n    }", "parameters": "separateParenGroups(String)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> separateParenGroups(String parenString)", "class_method_signature": "SeparateParenGroups.separateParenGroups(String parenString)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"String": ["length()", "charAt()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_1.java", "package": "package original;", "project_name": "original"}]