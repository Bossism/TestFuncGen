[{"class_name": "SpecialFactorial", "superclass": "", "interfaces": "", "c_sig": "class SpecialFactorial", "has_constructor": false, "fields": [], "methods": [{"method_name": "specialFactorial", "m_sig": "public static long specialFactorial(int n)", "class": "SpecialFactorial", "source_code": "public static long specialFactorial(int n) {\n        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res *= factorial(i);\n        }\n        return res;\n    }", "parameters": "specialFactorial(int)", "modifiers": "public static", "return": "long", "signature": "long specialFactorial(int n)", "class_method_signature": "SpecialFactorial.specialFactorial(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"this": ["factorial()"]}}, {"method_name": "factorial", "m_sig": "private static long factorial(int n)", "class": "SpecialFactorial", "source_code": "private static long factorial(int n) {\n        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res *= i;\n        }\n        return res;\n    }", "parameters": "factorial(int)", "modifiers": "private static", "return": "long", "signature": "long factorial(int n)", "class_method_signature": "SpecialFactorial.factorial(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": [], "class_path": "../original/target/classes/original/id_139.java", "package": "package original;", "project_name": "original"}]