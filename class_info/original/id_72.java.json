[{"class_name": "WillItFly", "superclass": "", "interfaces": "", "c_sig": "class WillItFly", "has_constructor": false, "fields": [], "methods": [{"method_name": "willItFly", "m_sig": "public static Boolean willItFly(List<Integer> q, int w)", "class": "WillItFly", "source_code": "public static Boolean willItFly(List<Integer> q, int w) {\n        int sum = 0;\n        for (int i = 0; i < q.size(); i++) {\n            sum += q.get(i);\n        }\n        if (sum > w) {\n            return false;\n        }\n        for (int i = 0; i < q.size() / 2; i++) {\n            if (q.get(i) != q.get(q.size() - i - 1)) {\n                return false;\n            }\n        }\n        return true;\n    }", "parameters": "willItFly(List<Integer>, int)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean willItFly(List<Integer> q, int w)", "class_method_signature": "WillItFly.willItFly(List<Integer> q, int w)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<Integer>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.List;"], "class_path": "../original/target/classes/original/id_72.java", "package": "package original;", "project_name": "original"}]