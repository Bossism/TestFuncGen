[{"class_name": "AntiShuffle", "superclass": "", "interfaces": "", "c_sig": "class AntiShuffle", "has_constructor": false, "fields": [], "methods": [{"method_name": "antiShuffle", "m_sig": "public static String antiShuffle(String s)", "class": "AntiShuffle", "source_code": "public static String antiShuffle(String s) {\n        String[] words = s.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            words[i] = sortString(words[i]);\n        }\n        return String.join(\" \", words);\n    }", "parameters": "antiShuffle(String)", "modifiers": "public static", "return": "String", "signature": "String antiShuffle(String s)", "class_method_signature": "AntiShuffle.antiShuffle(String s)", "is_constructor": false, "use_field": true, "is_get_set": false, "m_deps": {"String": ["split()"], "this": ["sortString()"]}}, {"method_name": "sortString", "m_sig": "private static String sortString(String s)", "class": "AntiShuffle", "source_code": "private static String sortString(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        return new String(chars);\n    }", "parameters": "sortString(String)", "modifiers": "private static", "return": "String", "signature": "String sortString(String s)", "class_method_signature": "AntiShuffle.sortString(String s)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"String": ["toCharArray()"]}}], "argument_list": "", "imports": ["import java.util.Arrays;"], "class_path": "../original/target/classes/original/id_86.java", "package": "package original;", "project_name": "original"}]