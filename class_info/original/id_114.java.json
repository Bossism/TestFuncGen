[{"class_name": "Minsubarraysum", "superclass": "", "interfaces": "", "c_sig": "class Minsubarraysum", "has_constructor": false, "fields": [], "methods": [{"method_name": "minsubarraysum", "m_sig": "public static long minsubarraysum(List<Object> nums)", "class": "Minsubarraysum", "source_code": "public static long minsubarraysum(List<Object> nums) {\n        long s = 0;\n        long max_sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            long num = ((Number) nums.get(i)).longValue();\n            s -= num;\n            if (s < 0) {\n                s = 0;\n            }\n            max_sum = Math.max(s, max_sum);\n        }\n        if (max_sum == 0) {\n            max_sum = -((Number) nums.get(0)).longValue();\n            for (int i = 0; i < nums.size(); i++) {\n                max_sum = Math.max(-((Number) nums.get(i)).longValue(), max_sum);\n            }\n        }\n        long min_sum = -max_sum;\n        return min_sum;\n    }", "parameters": "minsubarraysum(List<Object>)", "modifiers": "public static", "return": "long", "signature": "long minsubarraysum(List<Object> nums)", "class_method_signature": "Minsubarraysum.minsubarraysum(List<Object> nums)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<Object>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.List;"], "class_path": "../original/target/classes/original/id_114.java", "package": "package original;", "project_name": "original"}]