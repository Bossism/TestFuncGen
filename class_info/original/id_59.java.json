[{"class_name": "LargestPrimeFactor", "superclass": "", "interfaces": "", "c_sig": "class LargestPrimeFactor", "has_constructor": false, "fields": [], "methods": [{"method_name": "largestPrimeFactor", "m_sig": "public static int largestPrimeFactor(int n)", "class": "LargestPrimeFactor", "source_code": "public static int largestPrimeFactor(int n) {\n        int max = 0;\n        for (int i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n                n /= i;\n                i--;\n            }\n        }\n        return max;\n    }", "parameters": "largestPrimeFactor(int)", "modifiers": "public static", "return": "int", "signature": "int largestPrimeFactor(int n)", "class_method_signature": "LargestPrimeFactor.largestPrimeFactor(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": [], "class_path": "../original/target/classes/original/id_59.java", "package": "package original;", "project_name": "original"}]