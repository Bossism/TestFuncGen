[{"class_name": "OddCount", "superclass": "", "interfaces": "", "c_sig": "class OddCount", "has_constructor": false, "fields": [], "methods": [{"method_name": "oddCount", "m_sig": "public static List<String> oddCount(List<String> lst)", "class": "OddCount", "source_code": "public static List<String> oddCount(List<String> lst) {\n        List<String> result = new ArrayList<String>();\n        for (int i = 0; i < lst.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < lst.get(i).length(); j++) {\n                if (Integer.parseInt(lst.get(i).substring(j, j + 1)) % 2 != 0) {\n                    count++;\n                }\n            }\n            result.add(\"the number of odd elements \" + count + \"n the str\" + count + \"ng \" + count + \" of the \" + count + \"nput.\");\n        }\n        return result;\n    }", "parameters": "oddCount(List<String>)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> oddCount(List<String> lst)", "class_method_signature": "OddCount.oddCount(List<String> lst)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<String>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_113.java", "package": "package original;", "project_name": "original"}]