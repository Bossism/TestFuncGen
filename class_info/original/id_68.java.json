[{"class_name": "Pluck", "superclass": "", "interfaces": "", "c_sig": "class Pluck", "has_constructor": false, "fields": [], "methods": [{"method_name": "pluck", "m_sig": "public static List<Object> pluck(List<Object> arr)", "class": "Pluck", "source_code": "public static List<Object> pluck(List<Object> arr) {\n        List<Object> result = new ArrayList<Object>();\n        int min = Integer.MAX_VALUE;\n        int index = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) instanceof Integer) {\n                int value = (Integer) arr.get(i);\n                if (value % 2 == 0 && value < min) {\n                    min = value;\n                    index = i;\n                }\n            }\n        }\n        if (index != -1) {\n            result.add(min);\n            result.add(index);\n        }\n        return result;\n    }", "parameters": "pluck(List<Object>)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> pluck(List<Object> arr)", "class_method_signature": "Pluck.pluck(List<Object> arr)", "is_constructor": false, "use_field": true, "is_get_set": false, "m_deps": {"List<Object>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_68.java", "package": "package original;", "project_name": "original"}]