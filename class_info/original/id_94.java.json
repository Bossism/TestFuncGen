[{"class_name": "Skjkasdkd", "superclass": "", "interfaces": "", "c_sig": "class Skjkasdkd", "has_constructor": false, "fields": [], "methods": [{"method_name": "skjkasdkd", "m_sig": "public static int skjkasdkd(List<Integer> lst)", "class": "Skjkasdkd", "source_code": "public static int skjkasdkd(List<Integer> lst) {\n        int largestPrime = 0;\n        for (int value : lst) {\n            if (isPrime(value) && value > largestPrime) {\n                largestPrime = value;\n            }\n        }\n        int sum = 0;\n        while (largestPrime > 0) {\n            sum += largestPrime % 10;\n            largestPrime /= 10;\n        }\n        return sum;\n    }", "parameters": "skjkasdkd(List<Integer>)", "modifiers": "public static", "return": "int", "signature": "int skjkasdkd(List<Integer> lst)", "class_method_signature": "Skjkasdkd.skjkasdkd(List<Integer> lst)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"this": ["isPrime()"]}}, {"method_name": "isPrime", "m_sig": "private static boolean isPrime(int n)", "class": "Skjkasdkd", "source_code": "private static boolean isPrime(int n) {\n        if (n <= 1) {\n            return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }", "parameters": "isPrime(int)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPrime(int n)", "class_method_signature": "Skjkasdkd.isPrime(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": ["import java.util.List;"], "class_path": "../original/target/classes/original/id_94.java", "package": "package original;", "project_name": "original"}]