[{"class_name": "NextSmallest", "superclass": "", "interfaces": "", "c_sig": "class NextSmallest", "has_constructor": false, "fields": [], "methods": [{"method_name": "nextSmallest", "m_sig": "public static Integer nextSmallest(List<Object> lst)", "class": "NextSmallest", "source_code": "public static Integer nextSmallest(List<Object> lst) {\n        if (lst.size() <= 1) {\n            return null;\n        }\n        Integer smallest = (Integer) lst.get(0);\n        Integer nextSmallest = null;\n        for (int i = 1; i < lst.size(); i++) {\n            Integer current = (Integer) lst.get(i);\n            if (current < smallest) {\n                nextSmallest = smallest;\n                smallest = current;\n            } else if (nextSmallest == null || current < nextSmallest) {\n                if (current != smallest)\n                    nextSmallest = current;\n            }\n        }\n        return nextSmallest;\n    }", "parameters": "nextSmallest(List<Object>)", "modifiers": "public static", "return": "Integer", "signature": "Integer nextSmallest(List<Object> lst)", "class_method_signature": "NextSmallest.nextSmallest(List<Object> lst)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<Object>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.List;"], "class_path": "../original/target/classes/original/id_90.java", "package": "package original;", "project_name": "original"}]