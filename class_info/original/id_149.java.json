[{"class_name": "SortedListSum", "superclass": "", "interfaces": "", "c_sig": "class SortedListSum", "has_constructor": false, "fields": [], "methods": [{"method_name": "sortedListSum", "m_sig": "public static List<Object> sortedListSum(List<String> lst)", "class": "SortedListSum", "source_code": "public static List<Object> sortedListSum(List<String> lst) {\n        List<Object> result = new ArrayList<Object>();\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i).length() % 2 == 0) {\n                result.add(lst.get(i));\n            }\n        }\n        Collections.sort(result, new Comparator<Object>() {\n            @Override\n            public int compare(Object o1, Object o2) {\n                if (o1.toString().length() == o2.toString().length()) {\n                    return o1.toString().compareTo(o2.toString());\n                } else {\n                    return o1.toString().length() - o2.toString().length();\n                }\n            }\n        });\n        return result;\n    }", "parameters": "sortedListSum(List<String>)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> sortedListSum(List<String> lst)", "class_method_signature": "SortedListSum.sortedListSum(List<String> lst)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<String>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.Collections;", "import java.util.Comparator;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_149.java", "package": "package original;", "project_name": "original"}]