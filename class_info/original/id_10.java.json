[{"class_name": "MakePalindrome", "superclass": "", "interfaces": "", "c_sig": "class MakePalindrome", "has_constructor": false, "fields": [], "methods": [{"method_name": "makePalindrome", "m_sig": "public static String makePalindrome(String string)", "class": "MakePalindrome", "source_code": "public static String makePalindrome(String string) {\n        if (string.length() == 0) {\n            return \"\";\n        }\n        String reversed = new StringBuilder(string).reverse().toString();\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).equals(reversed.substring(0, string.length() - i))) {\n                return string + reversed.substring(string.length() - i);\n            }\n        }\n        return null;\n    }", "parameters": "makePalindrome(String)", "modifiers": "public static", "return": "String", "signature": "String makePalindrome(String string)", "class_method_signature": "MakePalindrome.makePalindrome(String string)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"String": ["length()", "substring()"]}}], "argument_list": "", "imports": [], "class_path": "../original/target/classes/original/id_10.java", "package": "package original;", "project_name": "original"}]