[{"class_name": "LargestSmallestIntegers", "superclass": "", "interfaces": "", "c_sig": "class LargestSmallestIntegers", "has_constructor": false, "fields": [], "methods": [{"method_name": "largestSmallestIntegers", "m_sig": "public static List<Integer> largestSmallestIntegers(List<Object> lst)", "class": "LargestSmallestIntegers", "source_code": "public static List<Integer> largestSmallestIntegers(List<Object> lst) {\n        List<Integer> result = new ArrayList<Integer>();\n        int largestNegative = Integer.MIN_VALUE;\n        int smallestPositive = Integer.MAX_VALUE;\n        for (int i = 0; i < lst.size(); i++) {\n            int curr = (Integer) lst.get(i);\n            if (curr < 0) {\n                if (curr > largestNegative) {\n                    largestNegative = curr;\n                }\n            } else if (curr > 0) {\n                if (curr < smallestPositive) {\n                    smallestPositive = curr;\n                }\n            }\n        }\n        if (largestNegative == Integer.MIN_VALUE) {\n            result.add(null);\n        } else {\n            result.add(largestNegative);\n        }\n        if (smallestPositive == Integer.MAX_VALUE) {\n            result.add(null);\n        } else {\n            result.add(smallestPositive);\n        }\n        return result;\n    }", "parameters": "largestSmallestIntegers(List<Object>)", "modifiers": "public static", "return": "List<Integer>", "signature": "List<Integer> largestSmallestIntegers(List<Object> lst)", "class_method_signature": "LargestSmallestIntegers.largestSmallestIntegers(List<Object> lst)", "is_constructor": false, "use_field": true, "is_get_set": false, "m_deps": {"List<Object>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_136.java", "package": "package original;", "project_name": "original"}]