[{"class_name": "PrimeFib", "superclass": "", "interfaces": "", "c_sig": "class PrimeFib", "has_constructor": false, "fields": [], "methods": [{"method_name": "primeFib", "m_sig": "public static int primeFib(int n)", "class": "PrimeFib", "source_code": "public static int primeFib(int n) {\n        int a = 1;\n        int b = 1;\n        int c = 0;\n        int count = 0;\n        while (count < n) {\n            c = a + b;\n            a = b;\n            b = c;\n            if (isPrime(c)) {\n                count++;\n            }\n        }\n        return c;\n    }", "parameters": "primeFib(int)", "modifiers": "public static", "return": "int", "signature": "int primeFib(int n)", "class_method_signature": "PrimeFib.primeFib(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"this": ["isPrime()"]}}, {"method_name": "isPrime", "m_sig": "private static Boolean isPrime(int n)", "class": "PrimeFib", "source_code": "private static Boolean isPrime(int n) {\n        if (n <= 1) {\n            return false;\n        }\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }", "parameters": "isPrime(int)", "modifiers": "private static", "return": "Boolean", "signature": "Boolean isPrime(int n)", "class_method_signature": "PrimeFib.isPrime(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": [], "class_path": "../original/target/classes/original/id_39.java", "package": "package original;", "project_name": "original"}]