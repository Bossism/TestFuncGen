[{"class_name": "OrderByPoints", "superclass": "", "interfaces": "", "c_sig": "class OrderByPoints", "has_constructor": false, "fields": [], "methods": [{"method_name": "orderByPoints", "m_sig": "public static List<Object> orderByPoints(List<Object> nums)", "class": "OrderByPoints", "source_code": "public static List<Object> orderByPoints(List<Object> nums) {\n        Collections.sort(nums, new Comparator<Object>() {\n            int digitsum(int n) {\n                boolean neg = false;\n                if (n < 0) {\n                    neg = true;\n                    n = -n;\n                }\n                int sum = 0;\n                while (n > 0) {\n                    if (n / 10 == 0 && neg)\n                        sum -= n % 10;\n                    else\n                        sum += n % 10;\n                    n = n / 10;\n                }\n                return sum;\n            }\n\n            public int compare(Object o1, Object o2) {\n                return digitsum((int) o1) - digitsum((int) o2);\n            }\n        });\n        return nums;\n    }", "parameters": "orderByPoints(List<Object>)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> orderByPoints(List<Object> nums)", "class_method_signature": "OrderByPoints.orderByPoints(List<Object> nums)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"this": ["digitsum()"]}}], "argument_list": "", "imports": ["import java.util.Collections;", "import java.util.Comparator;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_145.java", "package": "package original;", "project_name": "original"}]