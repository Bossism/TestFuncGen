[{"class_name": "StrongestExtension", "superclass": "", "interfaces": "", "c_sig": "class StrongestExtension", "has_constructor": false, "fields": [], "methods": [{"method_name": "strongestExtension", "m_sig": "public static String strongestExtension(String className, List<String> extensions)", "class": "StrongestExtension", "source_code": "public static String strongestExtension(String className, List<String> extensions) {\n        int max = Integer.MIN_VALUE;\n        String result = \"\";\n        for (int i = 0; i < extensions.size(); i++) {\n            int cap = 0;\n            int sm = 0;\n            for (int j = 0; j < extensions.get(i).length(); j++) {\n                if (Character.isUpperCase(extensions.get(i).charAt(j))) {\n                    cap++;\n                } else if (Character.isLowerCase(extensions.get(i).charAt(j))) {\n                    sm++;\n                }\n            }\n            if (cap - sm > max) {\n                max = cap - sm;\n                result = className + \".\" + extensions.get(i);\n            }\n        }\n        return result;\n    }", "parameters": "strongestExtension(String, List<String>)", "modifiers": "public static", "return": "String", "signature": "String strongestExtension(String className, List<String> extensions)", "class_method_signature": "StrongestExtension.strongestExtension(String className, List<String> extensions)", "is_constructor": false, "use_field": true, "is_get_set": false, "m_deps": {"List<String>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.List;"], "class_path": "../original/target/classes/original/id_153.java", "package": "package original;", "project_name": "original"}]