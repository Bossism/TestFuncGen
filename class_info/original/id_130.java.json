[{"class_name": "Tri", "superclass": "", "interfaces": "", "c_sig": "class Tri", "has_constructor": false, "fields": [], "methods": [{"method_name": "tri", "m_sig": "public static List<Number> tri(int n)", "class": "Tri", "source_code": "public static List<Number> tri(int n) {\n        if (n == 0) {\n            return Arrays.asList(1);\n        }\n        List<Number> my_tri = new ArrayList<>();\n        my_tri.add(1);\n        my_tri.add(3);\n        for (int i = 2; i < n + 1; i++) {\n            if (i % 2 == 0) {\n                my_tri.add(i / 2 + 1.0);\n            } else {\n                my_tri.add(my_tri.get(i - 1).doubleValue() + my_tri.get(i - 2).doubleValue() + (i + 3) / 2);\n            }\n        }\n        return my_tri;\n    }", "parameters": "tri(int)", "modifiers": "public static", "return": "List<Number>", "signature": "List<Number> tri(int n)", "class_method_signature": "Tri.tri(int n)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_130.java", "package": "package original;", "project_name": "original"}]