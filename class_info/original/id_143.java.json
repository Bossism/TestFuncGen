[{"class_name": "WordsInSentence", "superclass": "", "interfaces": "", "c_sig": "class WordsInSentence", "has_constructor": false, "fields": [], "methods": [{"method_name": "wordsInSentence", "m_sig": "public static String wordsInSentence(String sentence)", "class": "WordsInSentence", "source_code": "public static String wordsInSentence(String sentence) {\n        String[] words = sentence.split(\" \");\n        String result = \"\";\n        for (int i = 0; i < words.length; i++) {\n            if (isPrime(words[i].length())) {\n                result += words[i] + \" \";\n            }\n        }\n        return result.trim();\n    }", "parameters": "wordsInSentence(String)", "modifiers": "public static", "return": "String", "signature": "String wordsInSentence(String sentence)", "class_method_signature": "WordsInSentence.wordsInSentence(String sentence)", "is_constructor": false, "use_field": true, "is_get_set": false, "m_deps": {"String": ["split()"], "this": ["isPrime()"]}}, {"method_name": "isPrime", "m_sig": "private static boolean isPrime(int number)", "class": "WordsInSentence", "source_code": "private static boolean isPrime(int number) {\n        if (number <= 1) {\n            return false;\n        }\n        for (int i = 2; i < number; i++) {\n            if (number % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }", "parameters": "isPrime(int)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPrime(int number)", "class_method_signature": "WordsInSentence.isPrime(int number)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {}}], "argument_list": "", "imports": [], "class_path": "../original/target/classes/original/id_143.java", "package": "package original;", "project_name": "original"}]