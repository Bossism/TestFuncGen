[{"class_name": "SortArray1", "superclass": "", "interfaces": "", "c_sig": "class SortArray1", "has_constructor": false, "fields": [], "methods": [{"method_name": "sortArray", "m_sig": "public static List<Object> sortArray(List<Object> array)", "class": "SortArray1", "source_code": "public static List<Object> sortArray(List<Object> array) {\n        if (array.size() <= 1) {\n            return array;\n        }\n        int sum = (Integer) array.get(0) + (Integer) array.get(array.size() - 1);\n        List<Object> sortedArray = new ArrayList<Object>(array);\n        Collections.sort(sortedArray, new Comparator<Object>() {\n            @Override\n            public int compare(Object o1, Object o2) {\n                return (Integer) o1 - (Integer) o2;\n            }\n        });\n        if (sum % 2 == 0) {\n            Collections.reverse(sortedArray);\n        }\n        return sortedArray;\n    }", "parameters": "sortArray(List<Object>)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> sortArray(List<Object> array)", "class_method_signature": "SortArray1.sortArray(List<Object> array)", "is_constructor": false, "use_field": false, "is_get_set": false, "m_deps": {"List<Object>": ["size()", "get()"]}}], "argument_list": "", "imports": ["import java.util.ArrayList;", "import java.util.Collections;", "import java.util.Comparator;", "import java.util.List;"], "class_path": "../original/target/classes/original/id_88.java", "package": "package original;", "project_name": "original"}]