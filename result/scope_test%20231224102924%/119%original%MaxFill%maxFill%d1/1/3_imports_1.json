{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MaxFillTest {\n\n    @Test\n    public void testMaxFill() {\n        List<List<Integer>> grid = new ArrayList<>();\n        grid.add(Arrays.asList(1, 2, 3));\n        grid.add(Arrays.asList(4, 5, 6));\n        grid.add(Arrays.asList(7, 8, 9));\n\n        int capacity = 3;\n\n        int result = MaxFill.maxFill(grid, capacity);\n\n        assertEquals(6, result);\n    }\n\n    @Test\n    public void testMaxFillWithEmptyGrid() {\n        List<List<Integer>> grid = new ArrayList<>();\n\n        int capacity = 3;\n\n        int result = MaxFill.maxFill(grid, capacity);\n\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testMaxFillWithZeroCapacity() {\n        List<List<Integer>> grid = new ArrayList<>();\n        grid.add(Arrays.asList(1, 2, 3));\n        grid.add(Arrays.asList(4, 5, 6));\n        grid.add(Arrays.asList(7, 8, 9));\n\n        int capacity = 0;\n\n        int result = MaxFill.maxFill(grid, capacity);\n\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testMaxFillWithNegativeCapacity() {\n        List<List<Integer>> grid = new ArrayList<>();\n        grid.add(Arrays.asList(1, 2, 3));\n        grid.add(Arrays.asList(4, 5, 6));\n        grid.add(Arrays.asList(7, 8, 9));\n\n        int capacity = -3;\n\n        int result = MaxFill.maxFill(grid, capacity);\n\n        assertEquals(0, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (3):\n  JUnit Vintage:MaxFill_119_1Test:testMaxFillWithNegativeCapacity\n    MethodSource [className = 'original.MaxFill_119_1Test', methodName = 'testMaxFillWithNegativeCapacity', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<0> but was:<-15>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.MaxFill_119_1Test.testMaxFillWithNegativeCapacity(MaxFill_119_1Test.java:60)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:MaxFill_119_1Test:testMaxFill\n    MethodSource [className = 'original.MaxFill_119_1Test', methodName = 'testMaxFill', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<6> but was:<15>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.MaxFill_119_1Test.testMaxFill(MaxFill_119_1Test.java:21)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:MaxFill_119_1Test:testMaxFillWithZeroCapacity\n    MethodSource [className = 'original.MaxFill_119_1Test', methodName = 'testMaxFillWithZeroCapacity', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<0> but was:<2147483647>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.MaxFill_119_1Test.testMaxFillWithZeroCapacity(MaxFill_119_1Test.java:46)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 48 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         3 tests failed          ]\n\n"}