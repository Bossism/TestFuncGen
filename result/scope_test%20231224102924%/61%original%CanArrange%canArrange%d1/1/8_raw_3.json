{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CanArrangeTest {\n\n    @Test\n    public void testCanArrange() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(1);\n        arr.add(2);\n        arr.add(3);\n        arr.add(4);\n        arr.add(5);\n\n        int result = CanArrange.canArrange(arr);\n\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testCanArrangeWithDescendingOrder() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(5);\n        arr.add(4);\n        arr.add(3);\n        arr.add(2);\n        arr.add(1);\n\n        int result = CanArrange.canArrange(arr);\n\n        assertEquals(4, result);\n    }\n\n    @Test\n    public void testCanArrangeWithMixedOrder() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(1);\n        arr.add(2);\n        arr.add(3);\n        arr.add(4);\n        arr.add(5);\n\n        int result = CanArrange.canArrange(arr);\n\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testCanArrangeWithEmptyList() {\n        List<Object> arr = new ArrayList<>();\n\n        int result = CanArrange.canArrange(arr);\n\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testCanArrangeWithNonIntegerElements() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(1);\n        arr.add(2);\n        arr.add(3);\n        arr.add(4);\n        arr.add(5);\n\n        int result = CanArrange.canArrange(arr);\n\n        assertEquals(-1, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}