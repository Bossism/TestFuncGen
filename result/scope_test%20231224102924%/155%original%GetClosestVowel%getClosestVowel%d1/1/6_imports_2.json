{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class GetClosestVowelTest {\n\n    @Test\n    public void testGetClosestVowel() {\n        // Test case 1: word contains a vowel surrounded by consonants\n        String word1 = \"hello\";\n        String expected1 = \"e\";\n        String actual1 = GetClosestVowel.getClosestVowel(word1);\n        assertEquals(expected1, actual1);\n\n        // Test case 2: word contains a vowel at the beginning\n        String word2 = \"apple\";\n        String expected2 = \"a\";\n        String actual2 = GetClosestVowel.getClosestVowel(word2);\n        assertEquals(expected2, actual2);\n\n        // Test case 3: word contains a vowel at the end\n        String word3 = \"banana\";\n        String expected3 = \"a\";\n        String actual3 = GetClosestVowel.getClosestVowel(word3);\n        assertEquals(expected3, actual3);\n\n        // Test case 4: word contains no vowels\n        String word4 = \"xyz\";\n        String expected4 = \"\";\n        String actual4 = GetClosestVowel.getClosestVowel(word4);\n        assertEquals(expected4, actual4);\n\n        // Test case 5: word contains only vowels\n        String word5 = \"aeiou\";\n        String expected5 = \"e\";\n        String actual5 = GetClosestVowel.getClosestVowel(word5);\n        assertEquals(expected5, actual5);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:GetClosestVowel_155_1Test:testGetClosestVowel\n    MethodSource [className = 'original.GetClosestVowel_155_1Test', methodName = 'testGetClosestVowel', methodParameterTypes = '']\n    => org.junit.ComparisonFailure: expected:<[a]> but was:<[]>\n       org.junit.Assert.assertEquals(Assert.java:117)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.GetClosestVowel_155_1Test.testGetClosestVowel(GetClosestVowel_155_1Test.java:20)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       [...]\n\nTest run finished after 42 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}