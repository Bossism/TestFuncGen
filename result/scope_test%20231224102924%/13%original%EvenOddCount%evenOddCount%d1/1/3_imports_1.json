{"has_code": true, "source_code": "package original;\nimport java.util.Arrays;\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\nimport java.util.List;\n\npublic class EvenOddCountTest {\n\n    @Test\n    public void testEvenOddCount() {\n        // Test case 1: num = 0\n        int num1 = 0;\n        List<Integer> result1 = EvenOddCount.evenOddCount(num1);\n        assertEquals(Arrays.asList(1, 0), result1);\n\n        // Test case 2: num = 123456\n        int num2 = 123456;\n        List<Integer> result2 = EvenOddCount.evenOddCount(num2);\n        assertEquals(Arrays.asList(3, 3), result2);\n\n        // Test case 3: num = -987654321\n        int num3 = -987654321;\n        List<Integer> result3 = EvenOddCount.evenOddCount(num3);\n        assertEquals(Arrays.asList(5, 4), result3);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:EvenOddCount_13_1Test:testEvenOddCount\n    MethodSource [className = 'original.EvenOddCount_13_1Test', methodName = 'testEvenOddCount', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[5, 4]> but was:<[4, 5]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.EvenOddCount_13_1Test.testEvenOddCount(EvenOddCount_13_1Test.java:24)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 44 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}