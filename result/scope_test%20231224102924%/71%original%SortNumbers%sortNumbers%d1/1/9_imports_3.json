{"has_code": true, "source_code": "package original;\nimport java.util.Arrays;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class SortNumbersTest {\n\n    @Test\n    public void testSortNumbers() {\n        String numbers = \"one three two\";\n        String expected = \"one two three\";\n        String result = SortNumbers.sortNumbers(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortNumbersWithDuplicates() {\n        String numbers = \"one one two two three three\";\n        String expected = \"one one two two three three\";\n        String result = SortNumbers.sortNumbers(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortNumbersWithInvalidInput() {\n        String numbers = \"one two invalid\";\n        String expected = \"invalid one two\";\n        String result = SortNumbers.sortNumbers(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortNumbersWithEmptyInput() {\n        String numbers = \"\";\n        String expected = \"\";\n        String result = SortNumbers.sortNumbers(numbers);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:SortNumbers_71_1Test:testSortNumbersWithInvalidInput\n    MethodSource [className = 'original.SortNumbers_71_1Test', methodName = 'testSortNumbersWithInvalidInput', methodParameterTypes = '']\n    => org.junit.ComparisonFailure: expected:<[invalid ]one two> but was:<[]one two>\n       org.junit.Assert.assertEquals(Assert.java:117)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.SortNumbers_71_1Test.testSortNumbersWithInvalidInput(SortNumbers_71_1Test.java:30)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       [...]\n\nTest run finished after 49 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         1 tests failed          ]\n\n"}