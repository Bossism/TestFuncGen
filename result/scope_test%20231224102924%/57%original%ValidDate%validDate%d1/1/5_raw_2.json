{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class ValidDateTest {\n\n    @Test\n    public void testValidDate() {\n        // Test valid date\n        assertTrue(ValidDate.validDate(\"01-01-2022\"));\n        assertTrue(ValidDate.validDate(\"02-29-2020\"));\n        assertTrue(ValidDate.validDate(\"12-31-2023\"));\n\n        // Test invalid date\n        assertFalse(ValidDate.validDate(\"00-01-2022\")); // Invalid month\n        assertFalse(ValidDate.validDate(\"13-01-2022\")); // Invalid month\n        assertFalse(ValidDate.validDate(\"01-00-2022\")); // Invalid day\n        assertFalse(ValidDate.validDate(\"01-32-2022\")); // Invalid day\n        assertFalse(ValidDate.validDate(\"02-30-2022\")); // Invalid day for February\n        assertFalse(ValidDate.validDate(\"04-31-2022\")); // Invalid day for April\n        assertFalse(ValidDate.validDate(\"06-31-2022\")); // Invalid day for June\n        assertFalse(ValidDate.validDate(\"09-31-2022\")); // Invalid day for September\n        assertFalse(ValidDate.validDate(\"11-31-2022\")); // Invalid day for November\n        assertFalse(ValidDate.validDate(\"01-01-22\")); // Invalid year\n        assertFalse(ValidDate.validDate(\"01-01-20222\")); // Invalid year\n        assertFalse(ValidDate.validDate(\"01-01-202a\")); // Invalid year\n        assertFalse(ValidDate.validDate(\"01-01-2022-\")); // Invalid format\n        assertFalse(ValidDate.validDate(\"01/01/2022\")); // Invalid format\n        assertFalse(ValidDate.validDate(\"01-01\")); // Invalid format\n        assertFalse(ValidDate.validDate(\"01-01-2022-01\")); // Invalid format\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:ValidDate_57_1Test:testValidDate\n    MethodSource [className = 'original.ValidDate_57_1Test', methodName = 'testValidDate', methodParameterTypes = '']\n    => java.lang.NumberFormatException: For input string: \"202a\"\n       java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n       java.base/java.lang.Integer.parseInt(Integer.java:652)\n       java.base/java.lang.Integer.parseInt(Integer.java:770)\n       original.ValidDate.validDate(id_124.java:68)\n       original.ValidDate_57_1Test.testValidDate(ValidDate_57_1Test.java:27)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 40 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}