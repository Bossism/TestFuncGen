{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport static org.junit.Assert.assertEquals;\n\npublic class SearchTest {\n\n    @Test\n    public void testSearch() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n        int result = Search.search(lst);\n        assertEquals(1, result);\n    }\n\n    @Test\n    public void testSearchWithDuplicates() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(1, 1, 2, 2, 3, 3, 4, 4, 5, 5));\n        int result = Search.search(lst);\n        assertEquals(5, result);\n    }\n\n    @Test\n    public void testSearchWithNoValidNumber() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\n        int result = Search.search(lst);\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testSearchWithEmptyList() {\n        List<Integer> lst = new ArrayList<>();\n        int result = Search.search(lst);\n        assertEquals(-1, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:Search_69_1Test:testSearchWithDuplicates\n    MethodSource [className = 'original.Search_69_1Test', methodName = 'testSearchWithDuplicates', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<5> but was:<2>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Search_69_1Test.testSearchWithDuplicates(Search_69_1Test.java:22)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:Search_69_1Test:testSearchWithNoValidNumber\n    MethodSource [className = 'original.Search_69_1Test', methodName = 'testSearchWithNoValidNumber', methodParameterTypes = '']\n    => java.lang.ArrayIndexOutOfBoundsException: Index 11 out of bounds for length 11\n       original.Search.search(id_69.java:73)\n       original.Search_69_1Test.testSearchWithNoValidNumber(Search_69_1Test.java:28)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n       [...]\n\nTest run finished after 47 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         2 tests failed          ]\n\n"}