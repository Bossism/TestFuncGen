{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class EncodeTest {\n\n    @Test\n    public void testEncode() {\n        // Test with lowercase letters\n        String result1 = Encode.encode(\"hello\");\n        assertEquals(\"HELLO\", result1);\n\n        // Test with uppercase letters\n        String result2 = Encode.encode(\"WORLD\");\n        assertEquals(\"world\", result2);\n\n        // Test with mixed case letters\n        String result3 = Encode.encode(\"HeLLo\");\n        assertEquals(\"hEllO\", result3);\n\n        // Test with vowels\n        String result4 = Encode.encode(\"aeiou\");\n        assertEquals(\"cgkqw\", result4);\n\n        // Test with vowels and uppercase letters\n        String result5 = Encode.encode(\"AEIOU\");\n        assertEquals(\"cgkqw\", result5);\n\n        // Test with empty string\n        String result6 = Encode.encode(\"\");\n        assertEquals(\"\", result6);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:Encode_161_1Test:testEncode\n    MethodSource [className = 'original.Encode_161_1Test', methodName = 'testEncode', methodParameterTypes = '']\n    => org.junit.ComparisonFailure: expected:<H[ELLO]> but was:<H[GLLQ]>\n       org.junit.Assert.assertEquals(Assert.java:117)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.Encode_161_1Test.testEncode(Encode_161_1Test.java:11)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       [...]\n\nTest run finished after 60 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}