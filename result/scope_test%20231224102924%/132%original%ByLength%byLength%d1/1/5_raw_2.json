{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class ByLengthTest {\n\n    @Test\n    public void testByLength() {\n        List<Object> input = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));\n        List<Object> expected = new ArrayList<>(Arrays.asList(\"Nine\", \"Eight\", \"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\"));\n        List<Object> result = ByLength.byLength(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testByLengthWithNonIntegerValues() {\n        List<Object> input = new ArrayList<>(Arrays.asList(1, \"Two\", 3.14, \"Four\", 5, \"Six\", 7.8, \"Eight\", 9));\n        List<Object> expected = new ArrayList<>(Arrays.asList(\"Nine\", \"Eight\", \"Six\", \"Four\", \"Two\", \"One\"));\n        List<Object> result = ByLength.byLength(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testByLengthWithEmptyList() {\n        List<Object> input = new ArrayList<>();\n        List<Object> expected = new ArrayList<>();\n        List<Object> result = ByLength.byLength(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testByLengthWithNoValidValues() {\n        List<Object> input = new ArrayList<>(Arrays.asList(10, 11, 12));\n        List<Object> expected = new ArrayList<>();\n        List<Object> result = ByLength.byLength(input);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:ByLength_132_1Test:testByLengthWithNonIntegerValues\n    MethodSource [className = 'original.ByLength_132_1Test', methodName = 'testByLengthWithNonIntegerValues', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[Nine, Eight, Six, Four, Two, One]> but was:<[Nine, Five, One]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.ByLength_132_1Test.testByLengthWithNonIntegerValues(ByLength_132_1Test.java:24)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 48 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         1 tests failed          ]\n\n"}