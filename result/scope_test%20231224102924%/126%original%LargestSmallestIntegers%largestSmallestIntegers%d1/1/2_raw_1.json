{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class LargestSmallestIntegersTest {\n\n    @Test\n    public void testLargestSmallestIntegers() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(5);\n        lst.add(-10);\n        lst.add(3);\n        lst.add(-7);\n        lst.add(2);\n        lst.add(0);\n        \n        List<Integer> expected = new ArrayList<>();\n        expected.add(-7);\n        expected.add(2);\n        \n        List<Integer> result = LargestSmallestIntegers.largestSmallestIntegers(lst);\n        \n        assertEquals(expected, result);\n    }\n    \n    @Test\n    public void testLargestSmallestIntegersWithEmptyList() {\n        List<Object> lst = new ArrayList<>();\n        \n        List<Integer> expected = new ArrayList<>();\n        expected.add(null);\n        expected.add(null);\n        \n        List<Integer> result = LargestSmallestIntegers.largestSmallestIntegers(lst);\n        \n        assertEquals(expected, result);\n    }\n    \n    @Test\n    public void testLargestSmallestIntegersWithOnlyNegativeNumbers() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(-5);\n        lst.add(-10);\n        lst.add(-3);\n        lst.add(-7);\n        \n        List<Integer> expected = new ArrayList<>();\n        expected.add(-3);\n        expected.add(null);\n        \n        List<Integer> result = LargestSmallestIntegers.largestSmallestIntegers(lst);\n        \n        assertEquals(expected, result);\n    }\n    \n    @Test\n    public void testLargestSmallestIntegersWithOnlyPositiveNumbers() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(5);\n        lst.add(10);\n        lst.add(3);\n        lst.add(7);\n        \n        List<Integer> expected = new ArrayList<>();\n        expected.add(null);\n        expected.add(3);\n        \n        List<Integer> result = LargestSmallestIntegers.largestSmallestIntegers(lst);\n        \n        assertEquals(expected, result);\n    }\n    \n    @Test\n    public void testLargestSmallestIntegersWithZero() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(0);\n        \n        List<Integer> expected = new ArrayList<>();\n        expected.add(null);\n        expected.add(null);\n        \n        List<Integer> result = LargestSmallestIntegers.largestSmallestIntegers(lst);\n        \n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}