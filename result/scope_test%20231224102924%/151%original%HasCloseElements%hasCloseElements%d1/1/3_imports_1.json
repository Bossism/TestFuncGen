{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class HasCloseElementsTest {\n\n    @Test\n    public void testHasCloseElements() {\n        List<Double> numbers = Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0);\n        Double threshold = 0.5;\n        \n        assertFalse(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n    \n    @Test\n    public void testHasCloseElementsWithCloseElements() {\n        List<Double> numbers = Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0);\n        Double threshold = 2.0;\n        \n        assertTrue(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n    \n    @Test\n    public void testHasCloseElementsWithEmptyList() {\n        List<Double> numbers = Arrays.asList();\n        Double threshold = 0.5;\n        \n        assertFalse(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n    \n    @Test\n    public void testHasCloseElementsWithSingleElement() {\n        List<Double> numbers = Arrays.asList(1.0);\n        Double threshold = 0.5;\n        \n        assertFalse(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n    \n    @Test\n    public void testHasCloseElementsWithNullList() {\n        List<Double> numbers = null;\n        Double threshold = 0.5;\n        \n        assertFalse(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n    \n    @Test\n    public void testHasCloseElementsWithNullThreshold() {\n        List<Double> numbers = Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0);\n        Double threshold = null;\n        \n        assertFalse(HasCloseElements.hasCloseElements(numbers, threshold));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:HasCloseElements_151_1Test:testHasCloseElementsWithNullThreshold\n    MethodSource [className = 'original.HasCloseElements_151_1Test', methodName = 'testHasCloseElementsWithNullThreshold', methodParameterTypes = '']\n    => java.lang.NullPointerException\n       original.HasCloseElements.hasCloseElements(id_0.java:31)\n       original.HasCloseElements_151_1Test.testHasCloseElementsWithNullThreshold(HasCloseElements_151_1Test.java:54)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n       [...]\n  JUnit Vintage:HasCloseElements_151_1Test:testHasCloseElementsWithNullList\n    MethodSource [className = 'original.HasCloseElements_151_1Test', methodName = 'testHasCloseElementsWithNullList', methodParameterTypes = '']\n    => java.lang.NullPointerException\n       original.HasCloseElements.hasCloseElements(id_0.java:29)\n       original.HasCloseElements_151_1Test.testHasCloseElementsWithNullList(HasCloseElements_151_1Test.java:46)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n       [...]\n\nTest run finished after 62 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         6 tests found           ]\n[         0 tests skipped         ]\n[         6 tests started         ]\n[         0 tests aborted         ]\n[         4 tests successful      ]\n[         2 tests failed          ]\n\n"}