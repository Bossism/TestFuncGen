{"has_code": true, "source_code": "package original;\nimport java.util.Collections;\nimport java.util.Comparator;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class SortArrayTest {\n\n    @Test\n    public void testSortArray() {\n        List<Object> input = new ArrayList<>(Arrays.asList(5, 3, 9, 2, 7));\n        List<Object> expected = new ArrayList<>(Arrays.asList(2, 3, 5, 7, 9));\n        List<Object> result = SortArray.sortArray(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortArrayWithEmptyList() {\n        List<Object> input = new ArrayList<>();\n        List<Object> expected = new ArrayList<>();\n        List<Object> result = SortArray.sortArray(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortArrayWithNegativeNumbers() {\n        List<Object> input = new ArrayList<>(Arrays.asList(-5, -3, -9, -2, -7));\n        List<Object> expected = new ArrayList<>(Arrays.asList(-9, -7, -5, -3, -2));\n        List<Object> result = SortArray.sortArray(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSortArrayWithDuplicateNumbers() {\n        List<Object> input = new ArrayList<>(Arrays.asList(5, 3, 9, 2, 7, 5, 3));\n        List<Object> expected = new ArrayList<>(Arrays.asList(2, 3, 3, 5, 5, 7, 9));\n        List<Object> result = SortArray.sortArray(input);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:SortArray_143_1Test:testSortArrayWithDuplicateNumbers\n    MethodSource [className = 'original.SortArray_143_1Test', methodName = 'testSortArrayWithDuplicateNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[2, 3, 3, 5, 5, 7, 9]> but was:<[2, 3, 3, 5, 5, 9, 7]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.SortArray_143_1Test.testSortArrayWithDuplicateNumbers(SortArray_143_1Test.java:42)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:SortArray_143_1Test:testSortArray\n    MethodSource [className = 'original.SortArray_143_1Test', methodName = 'testSortArray', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[2, 3, 5, 7, 9]> but was:<[2, 3, 5, 9, 7]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.SortArray_143_1Test.testSortArray(SortArray_143_1Test.java:18)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 51 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         2 tests failed          ]\n\n"}