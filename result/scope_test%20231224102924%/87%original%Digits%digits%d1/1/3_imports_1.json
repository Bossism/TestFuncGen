{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class DigitsTest {\n\n    @Test\n    public void testDigitsWithNoOddDigits() {\n        int result = Digits.digits(2468);\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testDigitsWithOneOddDigit() {\n        int result = Digits.digits(13579);\n        assertEquals(9, result);\n    }\n\n    @Test\n    public void testDigitsWithMultipleOddDigits() {\n        int result = Digits.digits(123456789);\n        assertEquals(945, result);\n    }\n\n    @Test\n    public void testDigitsWithNegativeNumber() {\n        int result = Digits.digits(-13579);\n        assertEquals(9, result);\n    }\n\n    @Test\n    public void testDigitsWithZero() {\n        int result = Digits.digits(0);\n        assertEquals(0, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:Digits_87_1Test:testDigitsWithNegativeNumber\n    MethodSource [className = 'original.Digits_87_1Test', methodName = 'testDigitsWithNegativeNumber', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<9> but was:<0>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Digits_87_1Test.testDigitsWithNegativeNumber(Digits_87_1Test.java:28)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:Digits_87_1Test:testDigitsWithOneOddDigit\n    MethodSource [className = 'original.Digits_87_1Test', methodName = 'testDigitsWithOneOddDigit', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<9> but was:<945>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Digits_87_1Test.testDigitsWithOneOddDigit(Digits_87_1Test.java:16)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 49 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         2 tests failed          ]\n\n"}