{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FilterBySubstringTest {\n\n    @Test\n    public void testFilterBySubstring() {\n        List<Object> strings = new ArrayList<>();\n        strings.add(\"apple\");\n        strings.add(\"banana\");\n        strings.add(\"orange\");\n        strings.add(\"grape\");\n        strings.add(\"kiwi\");\n\n        String substring = \"an\";\n\n        List<Object> expected = new ArrayList<>();\n        expected.add(\"banana\");\n        expected.add(\"orange\");\n        expected.add(\"grape\");\n\n        List<Object> result = FilterBySubstring.filterBySubstring(strings, substring);\n\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:FilterBySubstring_62_1Test:testFilterBySubstring\n    MethodSource [className = 'original.FilterBySubstring_62_1Test', methodName = 'testFilterBySubstring', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[banana, orange, grape]> but was:<[banana, orange]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.FilterBySubstring_62_1Test.testFilterBySubstring(FilterBySubstring_62_1Test.java:28)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 42 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}