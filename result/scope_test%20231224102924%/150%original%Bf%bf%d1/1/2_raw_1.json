{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.List;\n\npublic class BfTest {\n\n    @Test\n    public void testBf() {\n        List<Object> expected = List.of(\"Venus\", \"Earth\", \"Mars\");\n        List<Object> result = Bf.bf(\"Mercury\", \"Jupiter\");\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testBfSamePlanet() {\n        List<Object> expected = List.of();\n        List<Object> result = Bf.bf(\"Earth\", \"Earth\");\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testBfInvalidPlanets() {\n        List<Object> expected = List.of();\n        List<Object> result = Bf.bf(\"Pluto\", \"Mars\");\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testBfInvalidOrder() {\n        List<Object> expected = List.of(\"Earth\", \"Mars\", \"Jupiter\");\n        List<Object> result = Bf.bf(\"Jupiter\", \"Mercury\");\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:Bf_150_1Test:testBfInvalidOrder\n    MethodSource [className = 'original.Bf_150_1Test', methodName = 'testBfInvalidOrder', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[Earth, Mars, Jupiter]> but was:<[Venus, Earth, Mars]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.Bf_150_1Test.testBfInvalidOrder(Bf_150_1Test.java:33)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 46 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         1 tests failed          ]\n\n"}