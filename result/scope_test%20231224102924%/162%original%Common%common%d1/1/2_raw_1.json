{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.*;\n\npublic class CommonTest {\n\n    @Test\n    public void testCommon() {\n        List<Integer> l1 = Arrays.asList(1, 2, 3, 4, 5);\n        List<Object> l2 = Arrays.asList(2, 4, 6, 8, 10);\n        List<Object> expected = Arrays.asList(2, 4);\n        List<Object> result = Common.common(l1, l2);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testCommonWithDuplicates() {\n        List<Integer> l1 = Arrays.asList(1, 2, 2, 3, 4, 5);\n        List<Object> l2 = Arrays.asList(2, 4, 4, 6, 8, 10);\n        List<Object> expected = Arrays.asList(2, 4);\n        List<Object> result = Common.common(l1, l2);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testCommonWithEmptyLists() {\n        List<Integer> l1 = Collections.emptyList();\n        List<Object> l2 = Collections.emptyList();\n        List<Object> expected = Collections.emptyList();\n        List<Object> result = Common.common(l1, l2);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testCommonWithNoCommonElements() {\n        List<Integer> l1 = Arrays.asList(1, 2, 3, 4, 5);\n        List<Object> l2 = Arrays.asList(6, 7, 8, 9, 10);\n        List<Object> expected = Collections.emptyList();\n        List<Object> result = Common.common(l1, l2);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testCommonWithMixedTypes() {\n        List<Integer> l1 = Arrays.asList(1, 2, 3, 4, 5);\n        List<Object> l2 = Arrays.asList(2, \"4\", 6, 8, 10);\n        List<Object> expected = Arrays.asList(2);\n        List<Object> result = Common.common(l1, l2);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}