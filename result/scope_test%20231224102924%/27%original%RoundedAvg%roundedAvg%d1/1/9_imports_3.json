{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class RoundedAvgTest {\n\n    @Test\n    public void testRoundedAvg() {\n        // Test case 1: n = 1, m = 5\n        Object result1 = RoundedAvg.roundedAvg(1, 5);\n        assertEquals(\"0b101\", result1);\n\n        // Test case 2: n = 0, m = 10\n        Object result2 = RoundedAvg.roundedAvg(0, 10);\n        assertEquals(\"0b101\", result2);\n\n        // Test case 3: n = 5, m = 5\n        Object result3 = RoundedAvg.roundedAvg(5, 5);\n        assertEquals(\"0b101\", result3);\n\n        // Test case 4: n = 10, m = 5\n        Object result4 = RoundedAvg.roundedAvg(10, 5);\n        assertEquals(-1, result4);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:RoundedAvg_27_1Test:testRoundedAvg\n    MethodSource [className = 'original.RoundedAvg_27_1Test', methodName = 'testRoundedAvg', methodParameterTypes = '']\n    => org.junit.ComparisonFailure: expected:<0b1[0]1> but was:<0b1[]1>\n       org.junit.Assert.assertEquals(Assert.java:117)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.RoundedAvg_27_1Test.testRoundedAvg(RoundedAvg_27_1Test.java:12)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       [...]\n\nTest run finished after 52 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}