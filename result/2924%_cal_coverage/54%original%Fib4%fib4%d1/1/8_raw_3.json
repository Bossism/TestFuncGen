{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class Fib4Test {\n\n    @Test\n    public void testFib4() {\n        // Test case 1: n = 0\n        assertEquals(0, Fib4.fib4(0));\n\n        // Test case 2: n = 1\n        assertEquals(0, Fib4.fib4(1));\n\n        // Test case 3: n = 2\n        assertEquals(2, Fib4.fib4(2));\n\n        // Test case 4: n = 3\n        assertEquals(2, Fib4.fib4(3));\n\n        // Test case 5: n = 4\n        assertEquals(4, Fib4.fib4(4));\n\n        // Test case 6: n = 5\n        assertEquals(8, Fib4.fib4(5));\n\n        // Test case 7: n = 6\n        assertEquals(14, Fib4.fib4(6));\n\n        // Test case 8: n = 7\n        assertEquals(26, Fib4.fib4(7));\n\n        // Test case 9: n = 8\n        assertEquals(48, Fib4.fib4(8));\n\n        // Test case 10: n = 9\n        assertEquals(88, Fib4.fib4(9));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:Fib4_54_1Test:testFib4\n    MethodSource [className = 'original.Fib4_54_1Test', methodName = 'testFib4', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<2> but was:<0>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Fib4_54_1Test.testFib4(Fib4_54_1Test.java:20)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 44 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}