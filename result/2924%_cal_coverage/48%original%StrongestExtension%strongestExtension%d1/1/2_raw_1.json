{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class StrongestExtensionTest {\n\n    @Test\n    public void testStrongestExtension() {\n        String className = \"TestClass\";\n        List<String> extensions = Arrays.asList(\"Extension1\", \"Extension2\", \"Extension3\");\n\n        String result = StrongestExtension.strongestExtension(className, extensions);\n\n        assertEquals(\"TestClass.Extension1\", result);\n    }\n\n    @Test\n    public void testStrongestExtensionWithEmptyExtensions() {\n        String className = \"TestClass\";\n        List<String> extensions = Arrays.asList();\n\n        String result = StrongestExtension.strongestExtension(className, extensions);\n\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testStrongestExtensionWithEqualCapAndSm() {\n        String className = \"TestClass\";\n        List<String> extensions = Arrays.asList(\"Extension1\", \"Extension2\", \"Extension3\");\n\n        String result = StrongestExtension.strongestExtension(className, extensions);\n\n        assertEquals(\"TestClass.Extension1\", result);\n    }\n\n    @Test\n    public void testStrongestExtensionWithMultipleMaxDifferences() {\n        String className = \"TestClass\";\n        List<String> extensions = Arrays.asList(\"Extension1\", \"Extension2\", \"Extension3\", \"Extension4\");\n\n        String result = StrongestExtension.strongestExtension(className, extensions);\n\n        assertEquals(\"TestClass.Extension1\", result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}