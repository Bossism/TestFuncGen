{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class ChooseNumTest {\n\n    @Test\n    public void testChooseNum() {\n        int result = ChooseNum.chooseNum(1, 10);\n        assertEquals(10, result);\n    }\n\n    @Test\n    public void testChooseNumWithNegativeNumbers() {\n        int result = ChooseNum.chooseNum(-10, -1);\n        assertEquals(-2, result);\n    }\n\n    @Test\n    public void testChooseNumWithNoEvenNumbers() {\n        int result = ChooseNum.chooseNum(1, 5);\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testChooseNumWithSingleNumber() {\n        int result = ChooseNum.chooseNum(5, 5);\n        assertEquals(-1, result);\n    }\n\n    @Test\n    public void testChooseNumWithDescendingRange() {\n        int result = ChooseNum.chooseNum(10, 1);\n        assertEquals(-1, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:ChooseNum_19_1Test:testChooseNumWithNegativeNumbers\n    MethodSource [className = 'original.ChooseNum_19_1Test', methodName = 'testChooseNumWithNegativeNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<-2> but was:<-1>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.ChooseNum_19_1Test.testChooseNumWithNegativeNumbers(ChooseNum_19_1Test.java:17)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:ChooseNum_19_1Test:testChooseNumWithNoEvenNumbers\n    MethodSource [className = 'original.ChooseNum_19_1Test', methodName = 'testChooseNumWithNoEvenNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<-1> but was:<4>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.ChooseNum_19_1Test.testChooseNumWithNoEvenNumbers(ChooseNum_19_1Test.java:23)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 48 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         2 tests failed          ]\n\n"}