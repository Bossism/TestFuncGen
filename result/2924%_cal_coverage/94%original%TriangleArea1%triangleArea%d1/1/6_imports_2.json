{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class TriangleArea1Test {\n\n    @Test\n    public void testTriangleArea() {\n        // Test case 1: Valid triangle\n        int a1 = 3;\n        int b1 = 4;\n        int c1 = 5;\n        double expected1 = 6.0;\n        double actual1 = TriangleArea1.triangleArea(a1, b1, c1).doubleValue();\n        assertEquals(expected1, actual1, 0.01);\n\n        // Test case 2: Invalid triangle\n        int a2 = 1;\n        int b2 = 2;\n        int c2 = 3;\n        double expected2 = -1.0;\n        double actual2 = TriangleArea1.triangleArea(a2, b2, c2).doubleValue();\n        assertEquals(expected2, actual2, 0.01);\n\n        // Test case 3: Equilateral triangle\n        int a3 = 5;\n        int b3 = 5;\n        int c3 = 5;\n        double expected3 = 10.83;\n        double actual3 = TriangleArea1.triangleArea(a3, b3, c3).doubleValue();\n        assertEquals(expected3, actual3, 0.01);\n\n        // Test case 4: Isosceles triangle\n        int a4 = 4;\n        int b4 = 4;\n        int c4 = 6;\n        double expected4 = 7.81;\n        double actual4 = TriangleArea1.triangleArea(a4, b4, c4).doubleValue();\n        assertEquals(expected4, actual4, 0.01);\n\n        // Test case 5: Scalene triangle\n        int a5 = 7;\n        int b5 = 9;\n        int c5 = 12;\n        double expected5 = 31.64;\n        double actual5 = TriangleArea1.triangleArea(a5, b5, c5).doubleValue();\n        assertEquals(expected5, actual5, 0.01);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:TriangleArea1_94_1Test:testTriangleArea\n    MethodSource [className = 'original.TriangleArea1_94_1Test', methodName = 'testTriangleArea', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<7.81> but was:<7.94>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:555)\n       org.junit.Assert.assertEquals(Assert.java:685)\n       original.TriangleArea1_94_1Test.testTriangleArea(TriangleArea1_94_1Test.java:40)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 42 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}