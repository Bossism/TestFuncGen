{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class AddElementsTest {\n\n    @Test\n    public void testAddElements() {\n        List<Integer> arr = new ArrayList<>();\n        arr.add(50);\n        arr.add(150);\n        arr.add(75);\n        arr.add(200);\n        arr.add(100);\n\n        int k = 3;\n        int expectedSum = 125;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n\n    @Test\n    public void testAddElementsWithEmptyList() {\n        List<Integer> arr = new ArrayList<>();\n        int k = 5;\n        int expectedSum = 0;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n\n    @Test\n    public void testAddElementsWithZeroK() {\n        List<Integer> arr = new ArrayList<>();\n        arr.add(50);\n        arr.add(150);\n        arr.add(75);\n        arr.add(200);\n        arr.add(100);\n\n        int k = 0;\n        int expectedSum = 0;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n\n    @Test\n    public void testAddElementsWithNegativeK() {\n        List<Integer> arr = new ArrayList<>();\n        arr.add(50);\n        arr.add(150);\n        arr.add(75);\n        arr.add(200);\n        arr.add(100);\n\n        int k = -2;\n        int expectedSum = 0;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n\n    @Test\n    public void testAddElementsWithKGreaterThanListSize() {\n        List<Integer> arr = new ArrayList<>();\n        arr.add(50);\n        arr.add(150);\n        arr.add(75);\n        arr.add(200);\n        arr.add(100);\n\n        int k = 10;\n        int expectedSum = 575;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n\n    @Test\n    public void testAddElementsWithAllElementsGreaterThan100() {\n        List<Integer> arr = new ArrayList<>();\n        arr.add(150);\n        arr.add(200);\n        arr.add(175);\n        arr.add(250);\n        arr.add(300);\n\n        int k = 5;\n        int expectedSum = 0;\n\n        int actualSum = AddElements.addElements(arr, k);\n\n        assertEquals(expectedSum, actualSum);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:AddElements_165_1Test:testAddElementsWithKGreaterThanListSize\n    MethodSource [className = 'original.AddElements_165_1Test', methodName = 'testAddElementsWithKGreaterThanListSize', methodParameterTypes = '']\n    => java.lang.IndexOutOfBoundsException: Index 5 out of bounds for length 5\n       java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n       java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n       java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n       java.base/java.util.Objects.checkIndex(Objects.java:372)\n       java.base/java.util.ArrayList.get(ArrayList.java:459)\n       original.AddElements.addElements(id_122.java:35)\n       original.AddElements_165_1Test.testAddElementsWithKGreaterThanListSize(AddElements_165_1Test.java:83)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       [...]\n  JUnit Vintage:AddElements_165_1Test:testAddElementsWithEmptyList\n    MethodSource [className = 'original.AddElements_165_1Test', methodName = 'testAddElementsWithEmptyList', methodParameterTypes = '']\n    => java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\n       java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n       java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n       java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n       java.base/java.util.Objects.checkIndex(Objects.java:372)\n       java.base/java.util.ArrayList.get(ArrayList.java:459)\n       original.AddElements.addElements(id_122.java:35)\n       original.AddElements_165_1Test.testAddElementsWithEmptyList(AddElements_165_1Test.java:32)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       [...]\n\nTest run finished after 44 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         6 tests found           ]\n[         0 tests skipped         ]\n[         6 tests started         ]\n[         0 tests aborted         ]\n[         4 tests successful      ]\n[         2 tests failed          ]\n\n"}