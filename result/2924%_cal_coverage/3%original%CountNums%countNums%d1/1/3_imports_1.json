{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CountNumsTest {\n\n    @Test\n    public void testCountNums() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(123);\n        arr.add(-456);\n        arr.add(789);\n        arr.add(-10);\n\n        int result = CountNums.countNums(arr);\n\n        assertEquals(3, result);\n    }\n\n    @Test\n    public void testCountNums_EmptyList() {\n        List<Object> arr = new ArrayList<>();\n\n        int result = CountNums.countNums(arr);\n\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testCountNums_AllNegativeNumbers() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(-123);\n        arr.add(-456);\n        arr.add(-789);\n\n        int result = CountNums.countNums(arr);\n\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testCountNums_AllPositiveNumbers() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(123);\n        arr.add(456);\n        arr.add(789);\n\n        int result = CountNums.countNums(arr);\n\n        assertEquals(3, result);\n    }\n\n    @Test\n    public void testCountNums_MixedPositiveAndNegativeNumbers() {\n        List<Object> arr = new ArrayList<>();\n        arr.add(123);\n        arr.add(-456);\n        arr.add(789);\n        arr.add(-10);\n        arr.add(0);\n\n        int result = CountNums.countNums(arr);\n\n        assertEquals(3, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:CountNums_3_1Test:testCountNums_AllNegativeNumbers\n    MethodSource [className = 'original.CountNums_3_1Test', methodName = 'testCountNums_AllNegativeNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<0> but was:<3>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.CountNums_3_1Test.testCountNums_AllNegativeNumbers(CountNums_3_1Test.java:40)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 49 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         4 tests successful      ]\n[         1 tests failed          ]\n\n"}