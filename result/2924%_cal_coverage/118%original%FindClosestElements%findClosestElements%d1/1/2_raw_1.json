{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class FindClosestElementsTest {\n\n    @Test\n    public void testFindClosestElements() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.5, 2.5, 3.5, 4.5, 5.5));\n        List<Double> expected = new ArrayList<>(Arrays.asList(1.5, 2.5));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElements_EmptyList() {\n        List<Double> numbers = new ArrayList<>();\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElements_SingleElement() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.5));\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElements_DuplicateElements() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.5, 2.5, 2.5, 3.5, 4.5, 5.5));\n        List<Double> expected = new ArrayList<>(Arrays.asList(2.5, 2.5));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}