{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SumSquares1Test {\n\n    @Test\n    public void testSumSquares() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(2);\n        lst.add(3);\n        lst.add(4);\n        lst.add(5);\n        lst.add(6);\n        lst.add(7);\n        lst.add(8);\n        lst.add(9);\n        \n        int result = SumSquares1.sumSquares(lst);\n        \n        assertEquals(2*2 + 3*3 + 4*4 + 5*5 + 6*6 + 7*7 + 8*8 + 9*9, result);\n    }\n    \n    @Test\n    public void testSumSquaresEmptyList() {\n        List<Object> lst = new ArrayList<>();\n        \n        int result = SumSquares1.sumSquares(lst);\n        \n        assertEquals(0, result);\n    }\n    \n    @Test\n    public void testSumSquaresNegativeNumbers() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(-2);\n        lst.add(-3);\n        lst.add(-4);\n        \n        int result = SumSquares1.sumSquares(lst);\n        \n        assertEquals((-2)*(-2) + (-3)*(-3) + (-4)*(-4), result);\n    }\n    \n    @Test\n    public void testSumSquaresMixedNumbers() {\n        List<Object> lst = new ArrayList<>();\n        lst.add(2);\n        lst.add(-3);\n        lst.add(4);\n        lst.add(-5);\n        \n        int result = SumSquares1.sumSquares(lst);\n        \n        assertEquals(2*2 + (-3)*(-3) + 4*4 + (-5)*(-5), result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (3):\n  JUnit Vintage:SumSquares1_78_1Test:testSumSquaresMixedNumbers\n    MethodSource [className = 'original.SumSquares1_78_1Test', methodName = 'testSumSquaresMixedNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<54> but was:<30>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.SumSquares1_78_1Test.testSumSquaresMixedNumbers(SumSquares1_78_1Test.java:58)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:SumSquares1_78_1Test:testSumSquaresNegativeNumbers\n    MethodSource [className = 'original.SumSquares1_78_1Test', methodName = 'testSumSquaresNegativeNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<29> but was:<-3>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.SumSquares1_78_1Test.testSumSquaresNegativeNumbers(SumSquares1_78_1Test.java:45)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:SumSquares1_78_1Test:testSumSquares\n    MethodSource [className = 'original.SumSquares1_78_1Test', methodName = 'testSumSquares', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<284> but was:<332>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.SumSquares1_78_1Test.testSumSquares(SumSquares1_78_1Test.java:24)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 45 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         3 tests failed          ]\n\n"}