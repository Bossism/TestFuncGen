{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SumSquaresTest {\n\n    @Test\n    public void testSumSquares() {\n        List<Number> lst = new ArrayList<>();\n        lst.add(2);\n        lst.add(3.5);\n        lst.add(4.2);\n\n        int result = SumSquares.sumSquares(lst);\n\n        assertEquals(34, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:SumSquares_50_1Test:testSumSquares\n    MethodSource [className = 'original.SumSquares_50_1Test', methodName = 'testSumSquares', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<34> but was:<45>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.SumSquares_50_1Test.testSumSquares(SumSquares_50_1Test.java:18)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 46 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}