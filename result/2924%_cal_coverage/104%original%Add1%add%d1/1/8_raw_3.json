{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Add1Test {\n\n    @Test\n    public void testAdd() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6));\n        int result = Add1.add(lst);\n        assertEquals(12, result);\n    }\n\n    @Test\n    public void testAddEmptyList() {\n        List<Integer> lst = new ArrayList<>();\n        int result = Add1.add(lst);\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testAddNoEvenNumbers() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(1, 3, 5));\n        int result = Add1.add(lst);\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testAddNoOddIndices() {\n        List<Integer> lst = new ArrayList<>(Arrays.asList(2, 4, 6));\n        int result = Add1.add(lst);\n        assertEquals(0, result);\n    }\n\n    @Test\n    public void testAddNullList() {\n        List<Integer> lst = null;\n        int result = Add1.add(lst);\n        assertEquals(0, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:Add1_104_1Test:testAddNoOddIndices\n    MethodSource [className = 'original.Add1_104_1Test', methodName = 'testAddNoOddIndices', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<0> but was:<4>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Add1_104_1Test.testAddNoOddIndices(Add1_104_1Test.java:36)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:Add1_104_1Test:testAddNullList\n    MethodSource [className = 'original.Add1_104_1Test', methodName = 'testAddNullList', methodParameterTypes = '']\n    => java.lang.NullPointerException\n       original.Add1.add(id_85.java:24)\n       original.Add1_104_1Test.testAddNullList(Add1_104_1Test.java:42)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n       [...]\n\nTest run finished after 43 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         2 tests failed          ]\n\n"}