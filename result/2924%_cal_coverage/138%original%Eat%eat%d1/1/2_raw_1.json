{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class EatTest {\n\n    @Test\n    public void testEatWithNeedLessThanOrEqualToRemaining() {\n        List<Integer> expected = Arrays.asList(10, 5);\n        List<Integer> actual = Eat.eat(5, 7, 10);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testEatWithNeedGreaterThanRemaining() {\n        List<Integer> expected = Arrays.asList(15, 0);\n        List<Integer> actual = Eat.eat(10, 7, 5);\n        assertEquals(expected, actual);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:Eat_138_1Test:testEatWithNeedLessThanOrEqualToRemaining\n    MethodSource [className = 'original.Eat_138_1Test', methodName = 'testEatWithNeedLessThanOrEqualToRemaining', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[10, 5]> but was:<[12, 3]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.Eat_138_1Test.testEatWithNeedLessThanOrEqualToRemaining(Eat_138_1Test.java:13)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 41 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         1 tests failed          ]\n\n"}