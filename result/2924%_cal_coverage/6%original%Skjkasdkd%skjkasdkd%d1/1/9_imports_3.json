{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class SkjkasdkdTest {\n\n    @Test\n    public void testSkjkasdkd() {\n        List<Integer> lst = Arrays.asList(2, 3, 5, 7, 11, 13, 17, 19, 23, 29);\n        int expected = 2 + 3 + 5 + 7 + 1 + 1 + 3 + 1 + 7 + 1 + 9 + 2 + 3 + 2 + 9;\n        int result = Skjkasdkd.skjkasdkd(lst);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSkjkasdkdEmptyList() {\n        List<Integer> lst = Arrays.asList();\n        int expected = 0;\n        int result = Skjkasdkd.skjkasdkd(lst);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSkjkasdkdNoPrimes() {\n        List<Integer> lst = Arrays.asList(4, 6, 8, 9, 10);\n        int expected = 0;\n        int result = Skjkasdkd.skjkasdkd(lst);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSkjkasdkdNegativeNumbers() {\n        List<Integer> lst = Arrays.asList(-2, -3, -5, -7, -11, -13, -17, -19, -23, -29);\n        int expected = 0;\n        int result = Skjkasdkd.skjkasdkd(lst);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:Skjkasdkd_6_1Test:testSkjkasdkd\n    MethodSource [className = 'original.Skjkasdkd_6_1Test', methodName = 'testSkjkasdkd', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<56> but was:<11>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:647)\n       org.junit.Assert.assertEquals(Assert.java:633)\n       original.Skjkasdkd_6_1Test.testSkjkasdkd(Skjkasdkd_6_1Test.java:15)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 44 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         3 tests successful      ]\n[         1 tests failed          ]\n\n"}