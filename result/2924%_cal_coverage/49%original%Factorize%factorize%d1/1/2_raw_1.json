{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FactorizeTest {\n\n    @Test\n    public void testFactorize() {\n        // Test case 1: n = 0\n        int n1 = 0;\n        List<Integer> expected1 = new ArrayList<>();\n        List<Integer> result1 = Factorize.factorize(n1);\n        assertEquals(expected1, result1);\n\n        // Test case 2: n = 1\n        int n2 = 1;\n        List<Integer> expected2 = new ArrayList<>();\n        List<Integer> result2 = Factorize.factorize(n2);\n        assertEquals(expected2, result2);\n\n        // Test case 3: n = 2\n        int n3 = 2;\n        List<Integer> expected3 = new ArrayList<>();\n        expected3.add(2);\n        List<Integer> result3 = Factorize.factorize(n3);\n        assertEquals(expected3, result3);\n\n        // Test case 4: n = 10\n        int n4 = 10;\n        List<Integer> expected4 = new ArrayList<>();\n        expected4.add(2);\n        expected4.add(5);\n        List<Integer> result4 = Factorize.factorize(n4);\n        assertEquals(expected4, result4);\n\n        // Test case 5: n = 100\n        int n5 = 100;\n        List<Integer> expected5 = new ArrayList<>();\n        expected5.add(2);\n        expected5.add(2);\n        expected5.add(5);\n        expected5.add(5);\n        List<Integer> result5 = Factorize.factorize(n5);\n        assertEquals(expected5, result5);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}