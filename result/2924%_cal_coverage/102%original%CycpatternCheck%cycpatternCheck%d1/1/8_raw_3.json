{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class CycpatternCheckTest {\n\n    @Test\n    public void testCycpatternCheck() {\n        // Test case 1: a and b are empty strings\n        assertFalse(CycpatternCheck.cycpatternCheck(\"\", \"\"));\n\n        // Test case 2: a is empty and b is not empty\n        assertFalse(CycpatternCheck.cycpatternCheck(\"\", \"abc\"));\n\n        // Test case 3: a is not empty and b is empty\n        assertFalse(CycpatternCheck.cycpatternCheck(\"abc\", \"\"));\n\n        // Test case 4: a and b are equal non-empty strings\n        assertTrue(CycpatternCheck.cycpatternCheck(\"abc\", \"abc\"));\n\n        // Test case 5: a contains b as a cyclic pattern\n        assertTrue(CycpatternCheck.cycpatternCheck(\"abcabcabc\", \"abc\"));\n\n        // Test case 6: a does not contain b as a cyclic pattern\n        assertFalse(CycpatternCheck.cycpatternCheck(\"abcabcabc\", \"def\"));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:CycpatternCheck_102_1Test:testCycpatternCheck\n    MethodSource [className = 'original.CycpatternCheck_102_1Test', methodName = 'testCycpatternCheck', methodParameterTypes = '']\n    => java.lang.AssertionError\n       org.junit.Assert.fail(Assert.java:87)\n       org.junit.Assert.assertTrue(Assert.java:42)\n       org.junit.Assert.assertFalse(Assert.java:65)\n       org.junit.Assert.assertFalse(Assert.java:75)\n       original.CycpatternCheck_102_1Test.testCycpatternCheck(CycpatternCheck_102_1Test.java:11)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 56 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}