{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TotalMatchTest {\n\n    @Test\n    public void testTotalMatch() {\n        List<Object> lst1 = new ArrayList<>(Arrays.asList(\"abc\", \"def\", 123));\n        List<Object> lst2 = new ArrayList<>(Arrays.asList(\"ghi\", \"jkl\", \"mno\"));\n        \n        List<Object> result = TotalMatch.totalMatch(lst1, lst2);\n        \n        assertEquals(lst2, result);\n    }\n    \n    @Test\n    public void testTotalMatchWithEmptyLists() {\n        List<Object> lst1 = new ArrayList<>();\n        List<Object> lst2 = new ArrayList<>();\n        \n        List<Object> result = TotalMatch.totalMatch(lst1, lst2);\n        \n        assertEquals(lst1, result);\n    }\n    \n    @Test\n    public void testTotalMatchWithOnlyStrings() {\n        List<Object> lst1 = new ArrayList<>(Arrays.asList(\"abc\", \"def\", \"ghi\"));\n        List<Object> lst2 = new ArrayList<>(Arrays.asList(\"jkl\", \"mno\", \"pqr\"));\n        \n        List<Object> result = TotalMatch.totalMatch(lst1, lst2);\n        \n        assertEquals(lst1, result);\n    }\n    \n    @Test\n    public void testTotalMatchWithOnlyIntegers() {\n        List<Object> lst1 = new ArrayList<>(Arrays.asList(1, 2, 3));\n        List<Object> lst2 = new ArrayList<>(Arrays.asList(4, 5, 6));\n        \n        List<Object> result = TotalMatch.totalMatch(lst1, lst2);\n        \n        assertEquals(lst2, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:TotalMatch_33_1Test:testTotalMatchWithOnlyIntegers\n    MethodSource [className = 'original.TotalMatch_33_1Test', methodName = 'testTotalMatchWithOnlyIntegers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[4, 5, 6]> but was:<[1, 2, 3]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.TotalMatch_33_1Test.testTotalMatchWithOnlyIntegers(TotalMatch_33_1Test.java:47)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:TotalMatch_33_1Test:testTotalMatch\n    MethodSource [className = 'original.TotalMatch_33_1Test', methodName = 'testTotalMatch', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[ghi, jkl, mno]> but was:<[abc, def, 123]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.TotalMatch_33_1Test.testTotalMatch(TotalMatch_33_1Test.java:17)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 50 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         2 tests failed          ]\n\n"}