{"has_code": true, "source_code": "package original;\nimport java.util.Collections;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class SortEvenTest {\n\n    @Test\n    public void testSortEven() {\n        List<Integer> input = new ArrayList<>(Arrays.asList(5, 2, 9, 4, 7, 6));\n        List<Integer> expectedOutput = new ArrayList<>(Arrays.asList(2, 2, 4, 4, 6, 6));\n\n        List<Integer> actualOutput = SortEven.sortEven(input);\n\n        assertEquals(expectedOutput, actualOutput);\n    }\n\n    @Test\n    public void testSortEvenWithEmptyList() {\n        List<Integer> input = new ArrayList<>();\n        List<Integer> expectedOutput = new ArrayList<>();\n\n        List<Integer> actualOutput = SortEven.sortEven(input);\n\n        assertEquals(expectedOutput, actualOutput);\n    }\n\n    @Test\n    public void testSortEvenWithSingleElement() {\n        List<Integer> input = new ArrayList<>(Arrays.asList(5));\n        List<Integer> expectedOutput = new ArrayList<>(Arrays.asList(5));\n\n        List<Integer> actualOutput = SortEven.sortEven(input);\n\n        assertEquals(expectedOutput, actualOutput);\n    }\n\n    @Test\n    public void testSortEvenWithOddSizeList() {\n        List<Integer> input = new ArrayList<>(Arrays.asList(5, 2, 9, 4, 7));\n        List<Integer> expectedOutput = new ArrayList<>(Arrays.asList(2, 2, 4, 4, 7));\n\n        List<Integer> actualOutput = SortEven.sortEven(input);\n\n        assertEquals(expectedOutput, actualOutput);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (2):\n  JUnit Vintage:SortEven_12_1Test:testSortEven\n    MethodSource [className = 'original.SortEven_12_1Test', methodName = 'testSortEven', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[2, 2, 4, 4, 6, 6]> but was:<[5, 2, 7, 4, 9, 6]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.SortEven_12_1Test.testSortEven(SortEven_12_1Test.java:18)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n  JUnit Vintage:SortEven_12_1Test:testSortEvenWithOddSizeList\n    MethodSource [className = 'original.SortEven_12_1Test', methodName = 'testSortEvenWithOddSizeList', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[2, 2, 4, 4, 7]> but was:<[5, 2, 7, 4, 9]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.SortEven_12_1Test.testSortEvenWithOddSizeList(SortEven_12_1Test.java:48)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 45 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         4 tests found           ]\n[         0 tests skipped         ]\n[         4 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         2 tests failed          ]\n\n"}