{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TriplesSumToZeroTest {\n\n    @Test\n    public void testTriplesSumToZero() {\n        // Test case 1: No triple sum to zero\n        List<Integer> list1 = Arrays.asList(1, 3, 5, 0);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list1));\n\n        // Test case 2: No triple sum to zero\n        List<Integer> list2 = Arrays.asList(1, 3, 5, -1);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list2));\n\n        // Test case 3: Triple sum to zero\n        List<Integer> list3 = Arrays.asList(1, 3, -2, 1);\n        assertTrue(TriplesSumToZero.triplesSumToZero(list3));\n\n        // Test case 4: No triple sum to zero\n        List<Integer> list4 = Arrays.asList(1, 2, 3, 7);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list4));\n\n        // Test case 5: No triple sum to zero\n        List<Integer> list5 = Arrays.asList(1, 2, 5, 7);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list5));\n\n        // Test case 6: Triple sum to zero\n        List<Integer> list6 = Arrays.asList(2, 4, -5, 3, 9, 7);\n        assertTrue(TriplesSumToZero.triplesSumToZero(list6));\n\n        // Test case 7: No triple sum to zero\n        List<Integer> list7 = Arrays.asList(1);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list7));\n\n        // Test case 8: No triple sum to zero\n        List<Integer> list8 = Arrays.asList(1, 3, 5, -100);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list8));\n\n        // Test case 9: No triple sum to zero\n        List<Integer> list9 = Arrays.asList(100, 3, 5, -100);\n        assertFalse(TriplesSumToZero.triplesSumToZero(list9));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}