{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class IsHappyTest {\n\n    @Test\n    public void testIsHappyWithShortString() {\n        assertFalse(IsHappy.isHappy(\"a\"));\n        assertFalse(IsHappy.isHappy(\"aa\"));\n    }\n\n    @Test\n    public void testIsHappyWithDistinctConsecutiveLetters() {\n        assertTrue(IsHappy.isHappy(\"abcd\"));\n        assertTrue(IsHappy.isHappy(\"adb\"));\n        assertTrue(IsHappy.isHappy(\"iopaxpoi\"));\n    }\n\n    @Test\n    public void testIsHappyWithNonDistinctConsecutiveLetters() {\n        assertFalse(IsHappy.isHappy(\"aabb\"));\n        assertFalse(IsHappy.isHappy(\"xyy\"));\n        assertFalse(IsHappy.isHappy(\"iopaxioi\"));\n    }\n\n    @Test\n    public void testIsHappyWithEmptyString() {\n        assertFalse(IsHappy.isHappy(\"\"));\n    }\n\n    @Test\n    public void testIsHappyWithNullString() {\n        assertFalse(IsHappy.isHappy(null));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:IsHappy_107_1Test:testIsHappyWithNullString\n    MethodSource [className = 'original.IsHappy_107_1Test', methodName = 'testIsHappyWithNullString', methodParameterTypes = '']\n    => java.lang.NullPointerException\n       original.IsHappy.isHappy(id_80.java:35)\n       original.IsHappy_107_1Test.testIsHappyWithNullString(IsHappy_107_1Test.java:35)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n       org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n       [...]\n\nTest run finished after 47 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         4 tests successful      ]\n[         1 tests failed          ]\n\n"}