{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class IsNestedTest {\n\n    @Test\n    public void testIsNestedWithValidNestedSubsequence() {\n        assertTrue(IsNested.isNested(\"[[]]\"));\n        assertTrue(IsNested.isNested(\"[[[][]]]\"));\n        assertTrue(IsNested.isNested(\"[[[]]]\"));\n        assertTrue(IsNested.isNested(\"[[[][]]]\"));\n    }\n\n    @Test\n    public void testIsNestedWithInvalidNestedSubsequence() {\n        assertFalse(IsNested.isNested(\"[]]]]]]][[[[[]\"));\n        assertFalse(IsNested.isNested(\"[][]\"));\n        assertFalse(IsNested.isNested(\"[]\"));\n        assertFalse(IsNested.isNested(\"[[][]]\"));\n        assertFalse(IsNested.isNested(\"[[]][[\"));\n    }\n\n    @Test\n    public void testIsNestedWithEmptyString() {\n        assertFalse(IsNested.isNested(\"\"));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:IsNested_42_1Test:testIsNestedWithInvalidNestedSubsequence\n    MethodSource [className = 'original.IsNested_42_1Test', methodName = 'testIsNestedWithInvalidNestedSubsequence', methodParameterTypes = '']\n    => java.lang.AssertionError\n       org.junit.Assert.fail(Assert.java:87)\n       org.junit.Assert.assertTrue(Assert.java:42)\n       org.junit.Assert.assertFalse(Assert.java:65)\n       org.junit.Assert.assertFalse(Assert.java:75)\n       original.IsNested_42_1Test.testIsNestedWithInvalidNestedSubsequence(IsNested_42_1Test.java:21)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 46 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         3 tests found           ]\n[         0 tests skipped         ]\n[         3 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         1 tests failed          ]\n\n"}