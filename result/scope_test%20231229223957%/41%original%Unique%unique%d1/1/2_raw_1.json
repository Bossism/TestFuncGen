{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.*;\n\npublic class UniqueTest {\n\n    @Test\n    public void testUnique() {\n        List<Integer> input = Arrays.asList(5, 3, 5, 2, 3, 3, 9, 0, 123);\n        List<Integer> expected = Arrays.asList(0, 2, 3, 5, 9, 123);\n        List<Integer> result = Unique.unique(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testUniqueWithEmptyList() {\n        List<Integer> input = new ArrayList<>();\n        List<Integer> expected = new ArrayList<>();\n        List<Integer> result = Unique.unique(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testUniqueWithSingleElement() {\n        List<Integer> input = Arrays.asList(5);\n        List<Integer> expected = Arrays.asList(5);\n        List<Integer> result = Unique.unique(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testUniqueWithDuplicateElements() {\n        List<Integer> input = Arrays.asList(5, 5, 5, 5, 5);\n        List<Integer> expected = Arrays.asList(5);\n        List<Integer> result = Unique.unique(input);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testUniqueWithNegativeElements() {\n        List<Integer> input = Arrays.asList(-5, -3, -5, -2, -3, -3, -9, 0, -123);\n        List<Integer> expected = Arrays.asList(-123, -9, -5, -3, -2, 0);\n        List<Integer> result = Unique.unique(input);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}