{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class WillItFlyTest {\n\n    @Test\n    public void testWillItFly_balancedAndSumLessThanMaxWeight_returnsTrue() {\n        List<Integer> q = Arrays.asList(3, 2, 3);\n        int w = 9;\n        assertTrue(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_unbalanced_returnsFalse() {\n        List<Integer> q = Arrays.asList(1, 2);\n        int w = 5;\n        assertFalse(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_sumGreaterThanMaxWeight_returnsFalse() {\n        List<Integer> q = Arrays.asList(3, 2, 3);\n        int w = 1;\n        assertFalse(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_singleElementList_returnsTrue() {\n        List<Integer> q = Arrays.asList(3);\n        int w = 5;\n        assertTrue(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_emptyList_returnsTrue() {\n        List<Integer> q = Arrays.asList();\n        int w = 5;\n        assertTrue(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_palindromicListWithSumEqualToMaxWeight_returnsTrue() {\n        List<Integer> q = Arrays.asList(1, 2, 1);\n        int w = 4;\n        assertTrue(WillItFly.willItFly(q, w));\n    }\n\n    @Test\n    public void testWillItFly_palindromicListWithSumGreaterThanMaxWeight_returnsFalse() {\n        List<Integer> q = Arrays.asList(1, 2, 1);\n        int w = 3;\n        assertFalse(WillItFly.willItFly(q, w));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}