{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class OrderByPointsTest {\n\n    @Test\n    public void testOrderByPoints() {\n        List<Object> nums = Arrays.asList(1, 11, -1, -11, -12);\n        List<Object> expected = Arrays.asList(-1, -11, 1, -12, 11);\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testOrderByPointsEmptyList() {\n        List<Object> nums = Arrays.asList();\n        List<Object> expected = Arrays.asList();\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testOrderByPointsLongList() {\n        List<Object> nums = Arrays.asList(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46);\n        List<Object> expected = Arrays.asList(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457);\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testOrderByPointsNegativeNumbers() {\n        List<Object> nums = Arrays.asList(1, -11, -32, 43, 54, -98, 2, -3);\n        List<Object> expected = Arrays.asList(-3, -32, -98, -11, 1, 2, 43, 54);\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testOrderByPointsDuplicateNumbers() {\n        List<Object> nums = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n        List<Object> expected = Arrays.asList(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9);\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testOrderByPointsZeroNumber() {\n        List<Object> nums = Arrays.asList(0, 6, 6, -76, -21, 23, 4);\n        List<Object> expected = Arrays.asList(-76, -21, 0, 4, 23, 6, 6);\n        List<Object> result = OrderByPoints.orderByPoints(nums);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}