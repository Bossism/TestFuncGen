{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class CountDistinctCharactersTest {\n\n    @Test\n    public void testCountDistinctCharacters() {\n        // Test case 1: string with distinct characters\n        String string1 = \"xyzXYZ\";\n        int expected1 = 3;\n        int actual1 = CountDistinctCharacters.countDistinctCharacters(string1);\n        assertEquals(expected1, actual1);\n\n        // Test case 2: string with all lowercase characters\n        String string2 = \"jerry\";\n        int expected2 = 4;\n        int actual2 = CountDistinctCharacters.countDistinctCharacters(string2);\n        assertEquals(expected2, actual2);\n\n        // Test case 3: empty string\n        String string3 = \"\";\n        int expected3 = 0;\n        int actual3 = CountDistinctCharacters.countDistinctCharacters(string3);\n        assertEquals(expected3, actual3);\n\n        // Test case 4: string with all distinct characters\n        String string4 = \"abcde\";\n        int expected4 = 5;\n        int actual4 = CountDistinctCharacters.countDistinctCharacters(string4);\n        assertEquals(expected4, actual4);\n\n        // Test case 5: string with mixed case characters\n        String string5 = \"abcdecadeCADE\";\n        int expected5 = 5;\n        int actual5 = CountDistinctCharacters.countDistinctCharacters(string5);\n        assertEquals(expected5, actual5);\n\n        // Test case 6: string with all same characters\n        String string6 = \"aaaaAAAAaaaa\";\n        int expected6 = 1;\n        int actual6 = CountDistinctCharacters.countDistinctCharacters(string6);\n        assertEquals(expected6, actual6);\n\n        // Test case 7: string with mixed case characters and spaces\n        String string7 = \"Jerry jERRY JeRRRY\";\n        int expected7 = 5;\n        int actual7 = CountDistinctCharacters.countDistinctCharacters(string7);\n        assertEquals(expected7, actual7);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}