{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class RollingMaxTest {\n\n    @Test\n    public void testRollingMax() {\n        // Test case 1: [1, 2, 3, 2, 3, 4, 2]\n        List<Object> numbers1 = new ArrayList<>(Arrays.asList(1, 2, 3, 2, 3, 4, 2));\n        List<Object> expected1 = new ArrayList<>(Arrays.asList(1, 2, 3, 3, 3, 4, 4));\n        List<Object> result1 = RollingMax.rollingMax(numbers1);\n        assertEquals(expected1, result1);\n\n        // Test case 2: []\n        List<Object> numbers2 = new ArrayList<>();\n        List<Object> expected2 = new ArrayList<>();\n        List<Object> result2 = RollingMax.rollingMax(numbers2);\n        assertEquals(expected2, result2);\n\n        // Test case 3: [1, 2, 3, 4]\n        List<Object> numbers3 = new ArrayList<>(Arrays.asList(1, 2, 3, 4));\n        List<Object> expected3 = new ArrayList<>(Arrays.asList(1, 2, 3, 4));\n        List<Object> result3 = RollingMax.rollingMax(numbers3);\n        assertEquals(expected3, result3);\n\n        // Test case 4: [4, 3, 2, 1]\n        List<Object> numbers4 = new ArrayList<>(Arrays.asList(4, 3, 2, 1));\n        List<Object> expected4 = new ArrayList<>(Arrays.asList(4, 4, 4, 4));\n        List<Object> result4 = RollingMax.rollingMax(numbers4);\n        assertEquals(expected4, result4);\n\n        // Test case 5: [3, 2, 3, 100, 3]\n        List<Object> numbers5 = new ArrayList<>(Arrays.asList(3, 2, 3, 100, 3));\n        List<Object> expected5 = new ArrayList<>(Arrays.asList(3, 3, 3, 100, 100));\n        List<Object> result5 = RollingMax.rollingMax(numbers5);\n        assertEquals(expected5, result5);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}