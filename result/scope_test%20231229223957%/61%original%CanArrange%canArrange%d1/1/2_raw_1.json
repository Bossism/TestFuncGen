{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class CanArrangeTest {\n\n    @Test\n    public void testCanArrange() {\n        // Test case 1: [1, 2, 4, 3, 5]\n        List<Object> arr1 = new ArrayList<>(Arrays.asList(1, 2, 4, 3, 5));\n        int result1 = CanArrange.canArrange(arr1);\n        assertEquals(3, result1);\n\n        // Test case 2: [1, 2, 3]\n        List<Object> arr2 = new ArrayList<>(Arrays.asList(1, 2, 3));\n        int result2 = CanArrange.canArrange(arr2);\n        assertEquals(-1, result2);\n\n        // Test case 3: [1, 2, 4, 5]\n        List<Object> arr3 = new ArrayList<>(Arrays.asList(1, 2, 4, 5));\n        int result3 = CanArrange.canArrange(arr3);\n        assertEquals(-1, result3);\n\n        // Test case 4: [1, 4, 2, 5, 6, 7, 8, 9, 10]\n        List<Object> arr4 = new ArrayList<>(Arrays.asList(1, 4, 2, 5, 6, 7, 8, 9, 10));\n        int result4 = CanArrange.canArrange(arr4);\n        assertEquals(2, result4);\n\n        // Test case 5: [4, 8, 5, 7, 3]\n        List<Object> arr5 = new ArrayList<>(Arrays.asList(4, 8, 5, 7, 3));\n        int result5 = CanArrange.canArrange(arr5);\n        assertEquals(4, result5);\n\n        // Test case 6: []\n        List<Object> arr6 = new ArrayList<>();\n        int result6 = CanArrange.canArrange(arr6);\n        assertEquals(-1, result6);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}