{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class HasCloseElementsTest {\n\n    @Test\n    public void testHasCloseElements() {\n        List<Double> numbers1 = Arrays.asList(1.0, 2.0, 3.0);\n        assertFalse(HasCloseElements.hasCloseElements(numbers1, 0.5));\n\n        List<Double> numbers2 = Arrays.asList(1.0, 2.8, 3.0, 4.0, 5.0, 2.0);\n        assertTrue(HasCloseElements.hasCloseElements(numbers2, 0.3));\n\n        List<Double> numbers3 = Arrays.asList(1.0, 2.0, 3.9, 4.0, 5.0, 2.2);\n        assertTrue(HasCloseElements.hasCloseElements(numbers3, 0.3));\n\n        List<Double> numbers4 = Arrays.asList(1.0, 2.0, 3.9, 4.0, 5.0, 2.2);\n        assertFalse(HasCloseElements.hasCloseElements(numbers4, 0.05));\n\n        List<Double> numbers5 = Arrays.asList(1.0, 2.0, 5.9, 4.0, 5.0);\n        assertTrue(HasCloseElements.hasCloseElements(numbers5, 0.95));\n\n        List<Double> numbers6 = Arrays.asList(1.0, 2.0, 5.9, 4.0, 5.0);\n        assertFalse(HasCloseElements.hasCloseElements(numbers6, 0.8));\n\n        List<Double> numbers7 = Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n        assertTrue(HasCloseElements.hasCloseElements(numbers7, 0.1));\n\n        List<Double> numbers8 = Arrays.asList(1.1, 2.2, 3.1, 4.1, 5.1);\n        assertTrue(HasCloseElements.hasCloseElements(numbers8, 1.0));\n\n        List<Double> numbers9 = Arrays.asList(1.1, 2.2, 3.1, 4.1, 5.1);\n        assertFalse(HasCloseElements.hasCloseElements(numbers9, 0.5));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}