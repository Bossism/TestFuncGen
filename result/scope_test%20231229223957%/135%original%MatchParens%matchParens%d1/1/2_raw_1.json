{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MatchParensTest {\n\n    @Test\n    public void testMatchParens() {\n        List<String> lst1 = Arrays.asList(\"()(\", \")\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst1));\n\n        List<String> lst2 = Arrays.asList(\")\", \")\");\n        assertEquals(\"No\", MatchParens.matchParens(lst2));\n\n        List<String> lst3 = Arrays.asList(\"(()(())\", \"())())\");\n        assertEquals(\"No\", MatchParens.matchParens(lst3));\n\n        List<String> lst4 = Arrays.asList(\")())\", \"(()()(\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst4));\n\n        List<String> lst5 = Arrays.asList(\"(())))\", \"(()())((\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst5));\n\n        List<String> lst6 = Arrays.asList(\"()\", \"())\");\n        assertEquals(\"No\", MatchParens.matchParens(lst6));\n\n        List<String> lst7 = Arrays.asList(\"(()(\", \"()))()\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst7));\n\n        List<String> lst8 = Arrays.asList(\"((((\", \"((())\");\n        assertEquals(\"No\", MatchParens.matchParens(lst8));\n\n        List<String> lst9 = Arrays.asList(\")(()\", \"(()(\");\n        assertEquals(\"No\", MatchParens.matchParens(lst9));\n\n        List<String> lst10 = Arrays.asList(\")(\", \")(\");\n        assertEquals(\"No\", MatchParens.matchParens(lst10));\n\n        List<String> lst11 = Arrays.asList(\"(\", \")\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst11));\n\n        List<String> lst12 = Arrays.asList(\")\", \"(\");\n        assertEquals(\"Yes\", MatchParens.matchParens(lst12));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}