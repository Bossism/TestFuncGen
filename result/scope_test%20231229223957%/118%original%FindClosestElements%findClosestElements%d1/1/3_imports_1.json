{"has_code": true, "source_code": "package original;\nimport java.util.Collections;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class FindClosestElementsTest {\n\n    @Test\n    public void testFindClosestElements() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0, 2.0, 3.9, 4.0, 5.0, 2.2));\n        List<Double> expected = new ArrayList<>(Arrays.asList(3.9, 4.0));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithDuplicateNumbers() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0, 2.0));\n        List<Double> expected = new ArrayList<>(Arrays.asList(2.0, 2.0));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithNegativeNumbers() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(-1.0, -2.0, -3.9, -4.0, -5.0, -2.2));\n        List<Double> expected = new ArrayList<>(Arrays.asList(-3.9, -4.0));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithEmptyList() {\n        List<Double> numbers = new ArrayList<>();\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithSingleNumber() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0));\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:FindClosestElements_118_1Test:testFindClosestElementsWithNegativeNumbers\n    MethodSource [className = 'original.FindClosestElements_118_1Test', methodName = 'testFindClosestElementsWithNegativeNumbers', methodParameterTypes = '']\n    => java.lang.AssertionError: expected:<[-3.9, -4.0]> but was:<[-4.0, -3.9]>\n       org.junit.Assert.fail(Assert.java:89)\n       org.junit.Assert.failNotEquals(Assert.java:835)\n       org.junit.Assert.assertEquals(Assert.java:120)\n       org.junit.Assert.assertEquals(Assert.java:146)\n       original.FindClosestElements_118_1Test.testFindClosestElementsWithNegativeNumbers(FindClosestElements_118_1Test.java:32)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       [...]\n\nTest run finished after 49 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         5 tests found           ]\n[         0 tests skipped         ]\n[         5 tests started         ]\n[         0 tests aborted         ]\n[         4 tests successful      ]\n[         1 tests failed          ]\n\n"}