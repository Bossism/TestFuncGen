{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class FindClosestElementsTest {\n\n    @Test\n    public void testFindClosestElements() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0, 2.0, 3.9, 4.0, 5.0, 2.2));\n        List<Double> expected = new ArrayList<>(Arrays.asList(3.9, 4.0));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithDuplicateNumbers() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0, 2.0, 3.0, 4.0, 5.0, 2.0));\n        List<Double> expected = new ArrayList<>(Arrays.asList(2.0, 2.0));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithNegativeNumbers() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(-1.0, -2.0, -3.9, -4.0, -5.0, -2.2));\n        List<Double> expected = new ArrayList<>(Arrays.asList(-4.0, -3.9));\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithEmptyList() {\n        List<Double> numbers = new ArrayList<>();\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testFindClosestElementsWithSingleNumber() {\n        List<Double> numbers = new ArrayList<>(Arrays.asList(1.0));\n        List<Double> expected = new ArrayList<>();\n        List<Double> result = FindClosestElements.findClosestElements(numbers);\n        assertEquals(expected, result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}