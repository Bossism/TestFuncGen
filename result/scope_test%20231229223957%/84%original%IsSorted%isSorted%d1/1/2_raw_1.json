{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class IsSortedTest {\n\n    @Test\n    public void testIsSortedWithEmptyList() {\n        List<Object> lst = Arrays.asList();\n        assertTrue(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithSingleElement() {\n        List<Object> lst = Arrays.asList(5);\n        assertTrue(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithSortedElements() {\n        List<Object> lst = Arrays.asList(1, 2, 3, 4, 5);\n        assertTrue(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithUnsortedElements() {\n        List<Object> lst = Arrays.asList(1, 3, 2, 4, 5);\n        assertFalse(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithDuplicateElements() {\n        List<Object> lst = Arrays.asList(1, 2, 2, 2, 3, 4);\n        assertFalse(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithMoreThanTwoDuplicates() {\n        List<Object> lst = Arrays.asList(1, 2, 2, 2, 3, 3, 4);\n        assertFalse(IsSorted.isSorted(lst));\n    }\n\n    @Test\n    public void testIsSortedWithNegativeElements() {\n        List<Object> lst = Arrays.asList(-5, -3, -2, 0, 1);\n        assertTrue(IsSorted.isSorted(lst));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}