{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class FixSpacesTest {\n\n    @Test\n    public void testFixSpaces_noSpaces() {\n        String result = FixSpaces.fixSpaces(\"Example\");\n        assertEquals(\"Example\", result);\n    }\n\n    @Test\n    public void testFixSpaces_singleSpace() {\n        String result = FixSpaces.fixSpaces(\"Example 1\");\n        assertEquals(\"Example_1\", result);\n    }\n\n    @Test\n    public void testFixSpaces_leadingSpace() {\n        String result = FixSpaces.fixSpaces(\" Example 2\");\n        assertEquals(\"_Example_2\", result);\n    }\n\n    @Test\n    public void testFixSpaces_consecutiveSpaces() {\n        String result = FixSpaces.fixSpaces(\" Example   3\");\n        assertEquals(\"_Example-3\", result);\n    }\n\n    @Test\n    public void testFixSpaces_multipleWords() {\n        String result = FixSpaces.fixSpaces(\"Mudasir Hanif \");\n        assertEquals(\"Mudasir_Hanif_\", result);\n    }\n\n    @Test\n    public void testFixSpaces_multipleConsecutiveSpaces() {\n        String result = FixSpaces.fixSpaces(\"Yellow Yellow  Dirty  Fellow\");\n        assertEquals(\"Yellow_Yellow__Dirty__Fellow\", result);\n    }\n\n    @Test\n    public void testFixSpaces_multipleConsecutiveSpacesWithWord() {\n        String result = FixSpaces.fixSpaces(\"Exa   mple\");\n        assertEquals(\"Exa-mple\", result);\n    }\n\n    @Test\n    public void testFixSpaces_multipleConsecutiveSpacesWithNumbers() {\n        String result = FixSpaces.fixSpaces(\"   Exa 1 2 2 mple\");\n        assertEquals(\"-Exa_1_2_2_mple\", result);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}