{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class StrangeSortListTest {\n\n    @Test\n    public void testStrangeSortList() {\n        // Test case 1\n        List<Object> input1 = new ArrayList<>(Arrays.asList(1, 2, 3, 4));\n        List<Object> expected1 = new ArrayList<>(Arrays.asList(1, 4, 2, 3));\n        assertEquals(expected1, StrangeSortList.strangeSortList(input1));\n\n        // Test case 2\n        List<Object> input2 = new ArrayList<>(Arrays.asList(5, 5, 5, 5));\n        List<Object> expected2 = new ArrayList<>(Arrays.asList(5, 5, 5, 5));\n        assertEquals(expected2, StrangeSortList.strangeSortList(input2));\n\n        // Test case 3\n        List<Object> input3 = new ArrayList<>();\n        List<Object> expected3 = new ArrayList<>();\n        assertEquals(expected3, StrangeSortList.strangeSortList(input3));\n\n        // Test case 4\n        List<Object> input4 = new ArrayList<>(Arrays.asList(5, 6, 7, 8, 9));\n        List<Object> expected4 = new ArrayList<>(Arrays.asList(5, 9, 6, 8, 7));\n        assertEquals(expected4, StrangeSortList.strangeSortList(input4));\n\n        // Test case 5\n        List<Object> input5 = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\n        List<Object> expected5 = new ArrayList<>(Arrays.asList(1, 5, 2, 4, 3));\n        assertEquals(expected5, StrangeSortList.strangeSortList(input5));\n\n        // Test case 6\n        List<Object> input6 = new ArrayList<>(Arrays.asList(5, 6, 7, 8, 9, 1));\n        List<Object> expected6 = new ArrayList<>(Arrays.asList(1, 9, 5, 8, 6, 7));\n        assertEquals(expected6, StrangeSortList.strangeSortList(input6));\n\n        // Test case 7\n        List<Object> input7 = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8));\n        List<Object> expected7 = new ArrayList<>(Arrays.asList(1, 8, 2, 7, 3, 6, 4, 5));\n        assertEquals(expected7, StrangeSortList.strangeSortList(input7));\n\n        // Test case 8\n        List<Object> input8 = new ArrayList<>(Arrays.asList(0, 2, 2, 2, 5, 5, -5, -5));\n        List<Object> expected8 = new ArrayList<>(Arrays.asList(-5, 5, -5, 5, 0, 2, 2, 2));\n        assertEquals(expected8, StrangeSortList.strangeSortList(input8));\n\n        // Test case 9\n        List<Object> input9 = new ArrayList<>(Arrays.asList(111111));\n        List<Object> expected9 = new ArrayList<>(Arrays.asList(111111));\n        assertEquals(expected9, StrangeSortList.strangeSortList(input9));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}