{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class AllPrefixesTest {\n\n    @Test\n    public void testAllPrefixes() {\n        // Test case 1: Non-empty string\n        List<Object> expected1 = new ArrayList<>();\n        expected1.add(\"a\");\n        expected1.add(\"ab\");\n        expected1.add(\"abc\");\n        assertEquals(expected1, AllPrefixes.allPrefixes(\"abc\"));\n\n        // Test case 2: Empty string\n        List<Object> expected2 = new ArrayList<>();\n        assertEquals(expected2, AllPrefixes.allPrefixes(\"\"));\n\n        // Test case 3: Non-empty string with different characters\n        List<Object> expected3 = new ArrayList<>();\n        expected3.add(\"a\");\n        expected3.add(\"as\");\n        expected3.add(\"asd\");\n        expected3.add(\"asdf\");\n        expected3.add(\"asdfg\");\n        expected3.add(\"asdfgh\");\n        assertEquals(expected3, AllPrefixes.allPrefixes(\"asdfgh\"));\n\n        // Test case 4: Non-empty string with same characters\n        List<Object> expected4 = new ArrayList<>();\n        expected4.add(\"W\");\n        expected4.add(\"WW\");\n        expected4.add(\"WWW\");\n        assertEquals(expected4, AllPrefixes.allPrefixes(\"WWW\"));\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}