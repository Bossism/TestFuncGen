{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class ByLengthTest {\n\n    @Test\n    public void testByLength() {\n        // Test case 1: arr = [2, 1, 1, 4, 5, 8, 2, 3]\n        List<Object> arr1 = Arrays.asList(2, 1, 1, 4, 5, 8, 2, 3);\n        List<Object> expected1 = Arrays.asList(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\");\n        List<Object> result1 = ByLength.byLength(arr1);\n        assertEquals(expected1, result1);\n\n        // Test case 2: arr = []\n        List<Object> arr2 = Arrays.asList();\n        List<Object> expected2 = Arrays.asList();\n        List<Object> result2 = ByLength.byLength(arr2);\n        assertEquals(expected2, result2);\n\n        // Test case 3: arr = [1, -1, 55]\n        List<Object> arr3 = Arrays.asList(1, -1, 55);\n        List<Object> expected3 = Arrays.asList(\"One\");\n        List<Object> result3 = ByLength.byLength(arr3);\n        assertEquals(expected3, result3);\n\n        // Test case 4: arr = [1, -1, 3, 2]\n        List<Object> arr4 = Arrays.asList(1, -1, 3, 2);\n        List<Object> expected4 = Arrays.asList(\"Three\", \"Two\", \"One\");\n        List<Object> result4 = ByLength.byLength(arr4);\n        assertEquals(expected4, result4);\n\n        // Test case 5: arr = [9, 4, 8]\n        List<Object> arr5 = Arrays.asList(9, 4, 8);\n        List<Object> expected5 = Arrays.asList(\"Nine\", \"Eight\", \"Four\");\n        List<Object> result5 = ByLength.byLength(arr5);\n        assertEquals(expected5, result5);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}