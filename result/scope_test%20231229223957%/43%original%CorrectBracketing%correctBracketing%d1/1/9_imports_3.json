{"has_code": true, "source_code": "package original;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class CorrectBracketingTest {\n\n    @Test\n    public void testCorrectBracketing() {\n        assertTrue(CorrectBracketing.correctBracketing(\"<>\"));\n        assertTrue(CorrectBracketing.correctBracketing(\"<<><>>\"));\n        assertTrue(CorrectBracketing.correctBracketing(\"<><><<><>><>><<><><<>>>\"));\n        assertTrue(CorrectBracketing.correctBracketing(\"<><><<<><><>><>><<><><<>>>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<<<><>>>>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"><<>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<<<<\"));\n        assertFalse(CorrectBracketing.correctBracketing(\">\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<<>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<><><<><>><>><<>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<><><<><>><>>><>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<<><><<><>><>><<><><<>>>>\"));\n        assertFalse(CorrectBracketing.correctBracketing(\"<<><><<><>><>><<><><<>>>>>\"));\n    }\n}", "has_syntactic_error": false, "runtime_error": "\nFailures (1):\n  JUnit Vintage:CorrectBracketing_43_1Test:testCorrectBracketing\n    MethodSource [className = 'original.CorrectBracketing_43_1Test', methodName = 'testCorrectBracketing', methodParameterTypes = '']\n    => java.lang.AssertionError\n       org.junit.Assert.fail(Assert.java:87)\n       org.junit.Assert.assertTrue(Assert.java:42)\n       org.junit.Assert.assertTrue(Assert.java:53)\n       original.CorrectBracketing_43_1Test.testCorrectBracketing(CorrectBracketing_43_1Test.java:12)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n       java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n       java.base/java.lang.reflect.Method.invoke(Method.java:566)\n       org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n       org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n       [...]\n\nTest run finished after 44 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n\n"}