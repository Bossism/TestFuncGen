{"has_code": true, "source_code": "package original;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class SortThirdTest {\n\n    @Test\n    public void testSortThird() {\n        // Test case 1\n        List<Integer> input1 = new ArrayList<>(Arrays.asList(1, 2, 3));\n        List<Integer> expected1 = new ArrayList<>(Arrays.asList(1, 2, 3));\n        List<Integer> result1 = SortThird.sortThird(input1);\n        assertEquals(expected1, result1);\n\n        // Test case 2\n        List<Integer> input2 = new ArrayList<>(Arrays.asList(5, 6, 3, 4, 8, 9, 2));\n        List<Integer> expected2 = new ArrayList<>(Arrays.asList(2, 6, 3, 4, 8, 9, 5));\n        List<Integer> result2 = SortThird.sortThird(input2);\n        assertEquals(expected2, result2);\n\n        // Test case 3\n        List<Integer> input3 = new ArrayList<>(Arrays.asList(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10));\n        List<Integer> expected3 = new ArrayList<>(Arrays.asList(1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10));\n        List<Integer> result3 = SortThird.sortThird(input3);\n        assertEquals(expected3, result3);\n\n        // Test case 4\n        List<Integer> input4 = new ArrayList<>(Arrays.asList(5, 8, -12, 4, 23, 2, 3, 11, 12, -10));\n        List<Integer> expected4 = new ArrayList<>(Arrays.asList(-10, 8, -12, 3, 23, 2, 4, 11, 12, 5));\n        List<Integer> result4 = SortThird.sortThird(input4);\n        assertEquals(expected4, result4);\n\n        // Test case 5\n        List<Integer> input5 = new ArrayList<>(Arrays.asList(5, 6, 3, 4, 8, 9, 2));\n        List<Integer> expected5 = new ArrayList<>(Arrays.asList(2, 6, 3, 4, 8, 9, 5));\n        List<Integer> result5 = SortThird.sortThird(input5);\n        assertEquals(expected5, result5);\n\n        // Test case 6\n        List<Integer> input6 = new ArrayList<>(Arrays.asList(5, 8, 3, 4, 6, 9, 2));\n        List<Integer> expected6 = new ArrayList<>(Arrays.asList(2, 8, 3, 4, 6, 9, 5));\n        List<Integer> result6 = SortThird.sortThird(input6);\n        assertEquals(expected6, result6);\n\n        // Test case 7\n        List<Integer> input7 = new ArrayList<>(Arrays.asList(5, 6, 9, 4, 8, 3, 2));\n        List<Integer> expected7 = new ArrayList<>(Arrays.asList(2, 6, 9, 4, 8, 3, 5));\n        List<Integer> result7 = SortThird.sortThird(input7);\n        assertEquals(expected7, result7);\n\n        // Test case 8\n        List<Integer> input8 = new ArrayList<>(Arrays.asList(5, 6, 3, 4, 8, 9, 2, 1));\n        List<Integer> expected8 = new ArrayList<>(Arrays.asList(2, 6, 3, 4, 8, 9, 5, 1));\n        List<Integer> result8 = SortThird.sortThird(input8);\n        assertEquals(expected8, result8);\n    }\n}", "has_syntactic_error": false, "coverage_xml": true}