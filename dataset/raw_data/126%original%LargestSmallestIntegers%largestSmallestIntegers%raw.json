{"id": 126, "project_name": "original", "signature": "public static List<Integer> largestSmallestIntegers(List<Object> lst)", "method_name": "largestSmallestIntegers", "parameters": "largestSmallestIntegers(List<Object>)", "source_code": "public static List<Integer> largestSmallestIntegers(List<Object> lst) {\n        List<Integer> result = new ArrayList<Integer>();\n        int largestNegative = Integer.MIN_VALUE;\n        int smallestPositive = Integer.MAX_VALUE;\n        for (int i = 0; i < lst.size(); i++) {\n            int curr = (Integer) lst.get(i);\n            if (curr < 0) {\n                if (curr > largestNegative) {\n                    largestNegative = curr;\n                }\n            } else if (curr > 0) {\n                if (curr < smallestPositive) {\n                    smallestPositive = curr;\n                }\n            }\n        }\n        if (largestNegative == Integer.MIN_VALUE) {\n            result.add(null);\n        } else {\n            result.add(largestNegative);\n        }\n        if (smallestPositive == Integer.MAX_VALUE) {\n            result.add(null);\n        } else {\n            result.add(smallestPositive);\n        }\n        return result;\n    }", "class_name": "LargestSmallestIntegers", "dependencies": {"List<Object>": ["size()", "get()"]}, "use_field": 1, "is_constructor": 0, "is_get_set": 0, "is_public": 1, "package": "package original;", "imports": "import java.util.ArrayList;\nimport java.util.List;"}