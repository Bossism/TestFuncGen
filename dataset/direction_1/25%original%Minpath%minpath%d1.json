{"focal_method": "minpath", "class_name": "Minpath", "information": "package original;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nclass Minpath{\npublic static List<Integer> minpath(List<List<Integer>> grid, int k) {\n\n        int n = grid.size();\n        int val = n * n + 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid.get(i).get(j) == 1) {\n                    List<Integer> temp = new ArrayList<>();\n                    if (i != 0) {\n                        temp.add(grid.get(i - 1).get(j));\n                    }\n\n                    if (j != 0) {\n                        temp.add(grid.get(i).get(j - 1));\n                    }\n\n                    if (i != n - 1) {\n                        temp.add(grid.get(i + 1).get(j));\n                    }\n\n                    if (j != n - 1) {\n                        temp.add(grid.get(i).get(j + 1));\n                    }\n\n                    val = Collections.min(temp);\n                }\n            }\n        }\n        List<Integer> ans = new ArrayList<>();\n        for (int i = 0; i < k; i++) {\n            if (i % 2 == 0) {\n                ans.add(1);\n            } else {\n                ans.add(val);\n            }\n        }\n        return ans;\n    }\n\n}"}